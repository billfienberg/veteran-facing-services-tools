{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/sidebar.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layouts_layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","_ref","location","a","createElement","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","propTypes","PropTypes","shape","string","isRequired","sections","id","name","href","items","query","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","data","render","children","object","func","ComponentList","gatsby_browser_entry_StaticQuery","SidebarItems","components","edges","map","comp","node","path","context","_157057713","length","className","item","key","gatsby_link_default","to","Sidebar","sidebarSection","sidebarData","find","section","includes","type","value","onChange","placeholder","Fragment","Layout","getSitePages","pages","filter","page","fields","slug","_this$props","this","Helmet_default","title","site","siteMetadata","meta","content","lang","_1044757290","Component"],"mappings":"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","file":"component---src-pages-404-js-863b0f7120ac88b3439d.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../layouts/layout';\n\nconst NotFoundPage = ({ location }) => (\n  <Layout location={location}>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  sections: [\n    {\n      id: 'getting-started',\n      name: 'Getting started',\n      href: 'getting-started',\n      items: [\n        {\n          name: 'Environment setup',\n          items: [\n            {\n              name: 'Set up VA.gov locally',\n              href: 'getting-started',\n            },\n            {\n              name: 'Internal Tools',\n              href: 'getting-started/internal-tools',\n            },\n          ],\n        },\n        {\n          name: 'Common tasks',\n          items: [\n            {\n              name: 'Running VA.gov locally',\n              href: 'getting-started/common-tasks/local',\n            },\n            {\n              name: 'Building VA.gov',\n              href: 'getting-started/common-tasks/build',\n            },\n            {\n              name: 'Running tests',\n              href: 'getting-started/common-tasks/tests',\n            },\n            {\n              name: 'Linting your code',\n              href: 'getting-started/common-tasks/lint',\n            },\n            {\n              name: 'Creating a new React application',\n              href: 'getting-started/common-tasks/new-app',\n            },\n            {\n              name: 'Writing a unit test',\n              // href: 'getting-started/common-tasks/write-unit-test'\n            },\n            {\n              name: 'Writing an end-to-end test',\n              // href: 'getting-started/common-tasks/write-e2e-test'\n            },\n            {\n              name: 'Updating Formation',\n              // href: 'getting-started/common-tasks/update-formation'\n            },\n            {\n              name: 'Adding new pages to this site',\n              href: 'getting-started/common-tasks/doc-page',\n            },\n            {\n              name: 'Adding pages from Github to this site',\n              href: 'getting-started/common-tasks/external-doc-page',\n            },\n          ],\n        },\n        {\n          name: 'Code organization',\n          items: [],\n        },\n        {\n          name: 'Standards and conventions',\n          items: [],\n        },\n        {\n          name: 'Development workflow',\n          items: [],\n        },\n      ],\n    },\n    {\n      id: 'architecture',\n      name: 'Architecture',\n      href: 'architecture',\n      items: [\n        {\n          name: 'Site structure',\n          items: [],\n        },\n        {\n          name: 'How does the build work?',\n        },\n        {\n          name: 'How do unit tests work?',\n        },\n        {\n          name: 'How do end-to-end tests work?',\n        },\n        {\n          name: 'Visual regression testing',\n        },\n        {\n          name: 'Teamsite',\n        },\n      ],\n    },\n    {\n      id: 'forms',\n      name: 'Forms',\n      href: 'forms',\n      items: [\n        {\n          name: 'Introduction',\n          href: 'forms/when-to-use-fs',\n        },\n        {\n          name: 'Tutorial',\n          items: [\n            {\n              name: 'Form Tutorial - Basic',\n              href: 'forms/form-tutorial-basic',\n            },\n            {\n              name: 'Form Tutorial - Intermediate',\n              href: 'forms/form-tutorial-intermediate',\n            },\n            {\n              name: 'Form Tutorial - Advanced',\n              href: 'forms/form-tutorial-advanced',\n            },\n            {\n              name: 'Setting up Save in Progress',\n              href: 'forms/save-in-progress',\n            },\n            {\n              name: 'Forms in Production',\n              href: 'forms/forms-in-production',\n            },\n          ],\n        },\n        {\n          name: 'Architecture',\n          items: [],\n        },\n        {\n          name: 'Common tasks',\n          items: [],\n        },\n      ],\n    },\n    {\n      id: 'platform',\n      name: 'Platform',\n      href: 'platform',\n      items: [\n        {\n          name: 'Formation',\n          items: [],\n        },\n        {\n          name: 'Formation components',\n          query: 'componentList',\n        },\n        {\n          name: 'Feature flags',\n        },\n        {\n          name: 'Identity',\n          items: [],\n        },\n        {\n          name: 'Static content',\n          items: [],\n        },\n        {\n          name: 'Monitoring',\n          items: [],\n        },\n      ],\n    },\n  ],\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nexport default function SidebarItems({ items }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"menu-list\">\n      {items.map(item => (\n        <li key={item.name}>\n          {!!item.items && (\n            <li key={item.name}>\n              <h4>{item.name}</h4>\n              <SidebarItems items={item.items} />\n            </li>\n          )}\n          {item.query === 'componentList' && (\n            <li key={item.name}>\n              <h4>{item.name}</h4>\n              <ComponentList />\n            </li>\n          )}\n          {!!item.href && (\n            <li key={item.name}>\n              <Link to={item.href}>{item.name}</Link>\n            </li>\n          )}\n          {!item.href && !item.items && !item.query && (\n            <li key={item.name}>{item.name} (future)</li>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(`/${section.href}`),\n  );\n\n  return (\n    <aside className=\"sidebar\">\n      <div className=\"search\">\n        <div className=\"input-wrap\">\n          <input\n            type=\"search\"\n            value=\"\"\n            onChange={() => {}}\n            placeholder=\"Type to search\"\n          />\n        </div>\n      </div>\n\n      {!!sidebarSection && (\n        <>\n          <h1>{sidebarSection.name}</h1>\n          <Link className=\"home-link\" to=\"\">\n            Home\n          </Link>\n          <SidebarItems items={sidebarSection.items} />\n        </>\n      )}\n      {!sidebarSection && (\n        <ul className=\"menu-list\">\n          {sidebarData.sections.map(section => (\n            <li key={section.id}>\n              <Link to={section.href}>{section.name}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </aside>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport './layout.scss';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nclass Layout extends React.Component {\n  getSitePages(pages) {\n    // removing the index from the list\n    return pages.filter(page => page.node.fields.slug !== '/');\n  }\n\n  render() {\n    const { children, location } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Helmet\n              title={data.site.siteMetadata.title}\n              meta={[\n                {\n                  name: 'description',\n                  content:\n                    'Template for creating design system documentatation',\n                },\n                {\n                  name: 'docsearch:language',\n                  content: 'en',\n                },\n                {\n                  name: 'docsearch:version',\n                  content: '1.0.0',\n                },\n                {\n                  name: 'keywords',\n                  content: 'design system, style guide, documentation',\n                },\n              ]}\n            >\n              <html lang=\"en\" />\n            </Helmet>\n            <Sidebar location={location} />\n            <div className=\"ContentArea docSearch-content\">{children}</div>\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}