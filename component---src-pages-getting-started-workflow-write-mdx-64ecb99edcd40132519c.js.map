{"version":3,"sources":["webpack:///./src/pages/getting-started/workflow/write.mdx","webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/SidebarLayout.jsx"],"names":["layoutProps","MDXContent","props","_this","_React$Component","call","this","layout","DefaultLayout","render","_this$props","components","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_4__","name","Layout","Object","assign","id","parentName","className","href","React","Component","_frontmatter","ComponentList","react_default","gatsby_browser_entry","query","data","SidebarItems","items","edges","map","comp","node","path","context","_157057713","_ref","_ref$isSublist","isSublist","length","item","key","to","Sidebar","location","sidebarSection","sidebarData","sections","find","section","pathname","includes","SidebarLayout","children","__webpack_require__","d","__webpack_exports__","propTypes","PropTypes","isRequired"],"mappings":"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","file":"component---src-pages-getting-started-workflow-write-mdx-64ecb99edcd40132519c.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"write\">Write</h1>\n      <h2 id=\"choose-an-issue-to-work-on\">Choose an issue to work on</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Work with your team to determine the right issue to work on`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`The VA handbook has more information about the broader process for delivering services to Veterans on VA.gov. Developers work in an agile framework, where issues are assigned to sprints and developers work on this items over the two-week sprint period.`}</MDXTag></MDXTag>\n      <h2 id=\"create-feature-branch\">Create feature branch</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Checkout `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`master`}</MDXTag>{` branch and pull the latest`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-bash\"\n        }}>{`git checkout master && git pull origin master\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Create a new feature branch from master`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-bash\"\n        }}>{`git checkout -b 12345-issue-title\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Since most new work derives from a GitHub Issue, it's recommended to prefix your branch name with the issue. For example, if you're working on a feature to collect a veteran's address as detailed in Issue #25, you might call your issue `}<MDXTag name=\"inlineCode\" components={components} parentName=\"em\">{`25-address`}</MDXTag>{`.`}</MDXTag></MDXTag>\n      <h2 id=\"code-new-functionality\">Code new functionality</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Write the code for the new feature! This is often the fun part. :-)`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`It's very helpful if you restrict the scope of changes to only the issue/feature that you're working on. For example, you might see some code you can cleanup along the way and decide to change it. However, this increases the scope of your changes and increases risk if your commits/feature need to be rolled back (and the rollback pulls other things with it). It also helps your code reviewer, because they aren't left wondering how a tangential change impacts the feature promised by the pull request.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`As you code your changes, commit changes to your feature branch. `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Commit early. Commit often`}</MDXTag>{`.`}</MDXTag>\n      <h2 id=\"write-tests-for-new-functionality\">Write tests for new functionality</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Unit: Tests a specific method or very granular piece of the code base.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`End to end: Tests how your code works when clicked through in a real browser.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Accessibility: Tests that run automated checks to catch some basic accessibility mistakes. Typically these are incorporated into end-to-end tests.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`These tests are automatically executed during `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/getting-started/common-tasks/workflow/review\"\n        }}>{`review`}</MDXTag>{`, but you should `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/getting-started/common-tasks/test\"\n        }}>{`run them locally`}</MDXTag>{` before moving on.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`The only way to quickly know if your new change breaks the existing functionality of the application is to have a suite of automated tests that execute whenever new stuff is added. When you add new functionality, new tests are required so that future developers know if they have broken your contributions.`}</MDXTag></MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    ","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nexport default function SidebarItems({ items, isSublist = false }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"site-c-sidenav-list\">\n      {items.map(item => {\n        if (item.items) {\n          return (\n            <li key={item.name}>\n              {isSublist && item.name}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <SidebarItems isSublist items={item.items} />\n            </li>\n          );\n        }\n        if (item.query === 'componentList') {\n          return (\n            <li key={item.name}>\n              {isSublist && item.name}\n              {!isSublist && <h2 className=\"heading-level-4\">{item.name}</h2>}\n              <ComponentList />\n            </li>\n          );\n        }\n        if (item.href) {\n          return (\n            <li key={item.name}>\n              <Link to={item.href}>{item.name}</Link>\n            </li>\n          );\n        }\n        return <li key={item.name}>{item.name} (future)</li>;\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(section.href),\n  );\n\n  if (!sidebarSection) {\n    return null;\n  }\n\n  return (\n    <div className=\"vads-l-col--4 site-c-content__nav\">\n      <div className=\"site-c-sidenav\">\n        <SidebarItems items={sidebarSection.items} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from './Layout';\nimport Sidebar from '../components/sidebar/Sidebar';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nexport default function SidebarLayout({ children, location }) {\n  return (\n    <Layout location={location}>\n      <div className=\"vads-l-row\">\n        <Sidebar location={location} />\n        <div\n          id=\"main-content\"\n          className=\"vads-l-col--8 site-c-content__content docSearch-content\"\n        >\n          {children}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nSidebarLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"],"sourceRoot":""}