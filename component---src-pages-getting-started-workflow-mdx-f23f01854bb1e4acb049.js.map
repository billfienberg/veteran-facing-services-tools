{"version":3,"sources":["webpack:///./src/pages/getting-started/workflow.mdx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/sidebar.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/layout.js"],"names":["layoutProps","MDXContent","props","_this","_React$Component","call","this","layout","DefaultLayout","render","_this$props","components","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_4__","name","Layout","Object","assign","parentName","href","React","Component","_frontmatter","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","propTypes","PropTypes","shape","string","isRequired","sections","id","items","query","StaticQueryContext","createContext","StaticQuery","react_default","Consumer","staticQueryData","data","children","object","func","ComponentList","gatsby_browser_entry_StaticQuery","SidebarItems","edges","map","comp","node","path","context","_157057713","length","className","item","key","gatsby_link_default","to","Sidebar","sidebarSection","sidebarData","find","section","includes","type","value","onChange","placeholder","Fragment","componentDidMount","window","mermaid_config","theme","startOnLoad","s","document","setAttribute","head","appendChild","mermaid","init","undefined","getElementsByClassName","getSitePages","pages","filter","page","fields","slug","Helmet_default","title","site","siteMetadata","meta","content","lang","_1044757290"],"mappings":"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","file":"component---src-pages-getting-started-workflow-mdx-f23f01854bb1e4acb049.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/layout.js\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <MDXTag name=\"h1\" components={components}>{`VA.gov workflow`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`VA.gov uses a `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://www.thoughtworks.com/continuous-integration\"\n        }}>{`Continuous Integration`}</MDXTag>{` process, which consists of the following steps:`}</MDXTag>\n      <MDXTag name=\"ol\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Determine which issue to work on`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create feature branch`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Code new functionality`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Write tests for new functionality`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Submit pull request`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Run unit tests and compliance scans (kicked off when a pull request is created)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Test and peer review code (read: code review)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Merge code to stable code base`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`When the last step is performed, the developer begins this process anew with another feature.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The workflow that we use closely resembles `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://guides.github.com/introduction/flow/\"\n        }}>{`GitHub Flow`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Choose an issue to work on`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The VA handbook has more information about the broader process for delivering services to Veterans on VA.gov. Developers work in an agile framework, where issues are assigned to sprints and developers work on this items over the two-week sprint period. You'll need to work with your team to determine the right issue for you to work on.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Create feature branch`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Each project's code base has a branch called `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`master`}</MDXTag>{` by default. Anything in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`master`}</MDXTag>{` is deemed to be stable and deployable. This means that anything you merge will need to be ready to immediately be live or hidden in some way behind a feature flag.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`When work on a new issue or feature is started, the developer should start by creating a new feature branch based on `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`master`}</MDXTag>{`. Since most new work derives from a GitHub Issue, it's recommended to suffix your branch name with the issue. For example, if you're working on a feature to collect a veteran's address as detailed in Issue #25, you might call your issue `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`address-i25`}</MDXTag>{`. It's also helpful to add your initials as a suffix to the branch name, so you can find your branches later.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Code new functionality`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Write the code for the new feature! This is often the fun part. :-)`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`It's very helpful if you restrict the scope of changes to only the issue/feature that you're working on. For example, you might see some code you can cleanup along the way and decide to change it. However, this increases the scope of your changes and increases risk if your commits/feature need to be rolled back (and the rollback pulls other things with it). It also helps your code reviewer, because they aren't left wondering how a tangential change impacts the feature promised by the pull request.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`As you code your changes, commit changes to your feature branch. Commit early. Commit often.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Write tests for new functionality`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The only way to quickly know if your new change breaks the existing functionality of the application is to have a suite of automated tests that execute whenever new stuff is added. When you add new functionality, new tests are required so that future developers know if they have broken your contributions.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`There are two kinds of tests you might add:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Unit: Tests a specific method or very granular piece of the code base.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`End to end: Tests how your code works when clicked through in a real browser.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Accessibility: Tests that run automated checks to catch some basic accessibility mistakes. Typically these are incorporated into end-to-end tests.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`These tests will get automatically executed in the next step, but you should run them locally before moving on.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Submit pull request`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`At this point all your code is committed to the feature branch. Additionally, you should sync your feature branch with changes from the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`master`}</MDXTag>{` branch to incorporate work that has been done concurrently.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Once that is done, you can submit a pull request indicating that your code is ready for review. You can use the GitHub request reviews feature to tag a fellow team member who you feel is qualified to review the code (this prevents the pull request from just sitting). You may also want to tag developers on other teams if the changes cover more than one application.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Depending on the type of work done, you may need a product person to review and / or a developer to review. See `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/department-of-veterans-affairs/vets.gov-team/blob/master/Work%20Practices/Engineering/Code%20Review%20Norms.md\"\n        }}>{`Code Review Norms`}</MDXTag>{` for more information on how we do code reviews.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Connecting pull requests's`}</MDXTag>{`: In the PR, there is a \"Connect this pull request with an existing issue\" section at the bottom of the issue. Click the \"Connect with an issue\" button to link the PR to the original issue in Zenhub.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Once your pull request has been submitted, move the ticket and with the connected PR into the Validate column to indicate it's ready for review.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Run tests and compliance scans`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Tests for pre-existing functionality and your new tests will be executed by Jenkins when you push your branch to Github. You can see the results in your PR, which will tell you if you've broken any existing functionality and if your tests execute within a non-local environment. If things fail, the test run will give you context on what broke and what needs to get fixed. All tests, including accessibility and end to end tests are run for each branch.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`In addition to tests, other static checks are run:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Security: The current set of npm dependencies are checked for security vulnerabilities`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Linting: This checks your code for clean style or easy to catch syntactic errors. This helps make the code more maintainable by helping make the code itself idiomatic and consistent looking across modules.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Test and peer review code`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`While the PR is open, both code review and manual testing an occur. Depending on the ttype of change, you may need a product or UX person to do manual testing. And we always have developers do code review on PRs`}</MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`Testing`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`This can involve some separate things:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Making sure the functionality works in the web browsers users are most likely to use`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Run the code on production-like environment. This could be done by spinning up a cloud instance that resembles production, or launching a container that is production like (such as a Docker image, etc.)`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`See if there are there any bugs or unexpected nuisances that users might encounter`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Does it meet the requirements?`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`Code Review`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`See our team's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/department-of-veterans-affairs/vets.gov-team/blob/master/Work%20Practices/Engineering/Code%20Review%20Norms.md\"\n        }}>{`code review norms`}</MDXTag>{` for details on how code review work and what needs to be checked.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Merge code to master`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`After all feedback from testing and code review is responded to and the developer and reviewer are in agreement that the code is satisfactory (including re-running automated tests and needing them to pass), it's time to merge the code from its feature branch into the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`master`}</MDXTag>{` branch.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`After all tests and peer review has been completed a member of the team will need to create a branch and manually merge in the proposed changes. They will then need to close the original PR and create a new PR from their branch. This will allow the testing infrastructure to trigger automated testing on the propsed work. Once that testing in complete a second internal team member will be required to approve the work and merge it into the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`master`}</MDXTag>{` branch`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    ","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  sections: [\n    {\n      id: 'getting-started',\n      name: 'Getting started',\n      href: 'getting-started',\n      items: [\n        {\n          name: 'Start up guide',\n          items: [\n            {\n              name: 'Set up VA.gov locally',\n              href: 'getting-started',\n            },\n            {\n              name: 'Accessing internal tools',\n              href: 'getting-started/internal-tools',\n            },\n            {\n              name: 'VA.gov environments',\n              href: 'getting-started/environments',\n            },\n            {\n              name: 'Development workflow',\n              href: 'getting-started/workflow',\n            },\n            {\n              name: 'Bundes and Code organization',\n              href: 'getting-started/bundles-and-code-organization',\n            },\n          ],\n        },\n        {\n          name: 'Common tasks',\n          items: [\n            {\n              name: 'Running VA.gov locally',\n              href: 'getting-started/common-tasks/local',\n            },\n            {\n              name: 'Building VA.gov',\n              href: 'getting-started/common-tasks/build',\n            },\n            {\n              name: 'Running tests',\n              href: 'getting-started/common-tasks/tests',\n            },\n            {\n              name: 'Linting your code',\n              href: 'getting-started/common-tasks/lint',\n            },\n            {\n              name: 'Creating a new React application',\n              href: 'getting-started/common-tasks/new-app',\n            },\n            {\n              name: 'Writing a unit test',\n              // href: 'getting-started/common-tasks/write-unit-test'\n            },\n            {\n              name: 'Writing an end-to-end test',\n              // href: 'getting-started/common-tasks/write-e2e-test'\n            },\n            {\n              name: 'Updating Formation',\n              // href: 'getting-started/common-tasks/update-formation'\n            },\n            {\n              name: 'Adding new pages to this site',\n              href: 'getting-started/common-tasks/doc-page',\n            },\n            {\n              name: 'Adding pages from Github to this site',\n              href: 'getting-started/common-tasks/external-doc-page',\n            },\n            {\n              name: 'Add Graphs to MDX',\n              href: 'getting-started/common-tasks/add-graphs-to-mdx',\n            },\n            {\n              name: 'Creating A Gatsby Plugin',\n              href: 'getting-started/common-tasks/creating-gatsby-plugins',\n            },\n          ],\n        },\n        {\n          name: 'Standards and conventions',\n          items: [],\n        },\n      ],\n    },\n    {\n      id: 'architecture',\n      name: 'Architecture',\n      href: 'architecture',\n      items: [\n        {\n          name: 'Metalsmith',\n          items: [\n            {\n              name: 'How are URLs created',\n              href: 'architecture/metalsmith/urls',\n            },\n            {\n              name: 'How templates work',\n              href: 'architecture/metalsmith/templates',\n            },\n            {\n              name: 'How to create collections and related links',\n              href: 'architecture/metalsmith/collections',\n            },\n          ],\n        },\n        {\n          name: 'Site structure',\n          items: [\n            {\n              name: 'Topology',\n              href: 'architecture/site-structure/topology-overview',\n            },\n            {\n              name: 'Client overview',\n              href: 'architecture/site-structure/client-overview',\n            },\n            {\n              name: 'Styling',\n              href: 'architecture/site-structure/styling-overview',\n            },\n          ],\n        },\n        {\n          name: 'How does the build work?',\n        },\n        {\n          name: 'How do unit tests work?',\n        },\n        {\n          name: 'How do end-to-end tests work?',\n        },\n        {\n          name: 'Visual regression testing',\n          href: 'architecture/visual-regression-testing',\n        },\n        {\n          name: 'Teamsite',\n          href: 'architecture/teamsite',\n        },\n      ],\n    },\n    {\n      id: 'forms',\n      name: 'Forms',\n      href: 'forms',\n      items: [\n        {\n          name: 'Introduction',\n          href: 'forms/when-to-use-fs',\n        },\n        {\n          name: 'Tutorial',\n          items: [\n            {\n              name: 'Form Tutorial - Basic',\n              href: 'forms/form-tutorial-basic',\n            },\n            {\n              name: 'Form Tutorial - Intermediate',\n              href: 'forms/form-tutorial-intermediate',\n            },\n            {\n              name: 'Form Tutorial - Advanced',\n              href: 'forms/form-tutorial-advanced',\n            },\n            {\n              name: 'Setting up Save in Progress',\n              href: 'forms/save-in-progress',\n            },\n            {\n              name: 'Forms in Production',\n              href: 'forms/forms-in-production',\n            },\n          ],\n        },\n        {\n          name: 'Architecture',\n          items: [],\n        },\n        {\n          name: 'Common tasks',\n          items: [],\n        },\n      ],\n    },\n    {\n      id: 'platform',\n      name: 'Platform',\n      href: 'platform',\n      items: [\n        {\n          name: 'Formation',\n          items: [],\n        },\n        {\n          name: 'Formation components',\n          query: 'componentList',\n        },\n        {\n          name: 'Feature flags',\n        },\n        {\n          name: 'Identity',\n          items: [],\n        },\n        {\n          name: 'Static content',\n          items: [],\n        },\n        {\n          name: 'Monitoring',\n          items: [],\n        },\n      ],\n    },\n  ],\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nexport default function SidebarItems({ items }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"menu-list\">\n      {items.map(item => (\n        <li key={item.name}>\n          {!!item.items && (\n            <li key={item.name}>\n              <h4>{item.name}</h4>\n              <SidebarItems items={item.items} />\n            </li>\n          )}\n          {item.query === 'componentList' && (\n            <li key={item.name}>\n              <h4>{item.name}</h4>\n              <ComponentList />\n            </li>\n          )}\n          {!!item.href && (\n            <li key={item.name}>\n              <Link to={item.href}>{item.name}</Link>\n            </li>\n          )}\n          {!item.href && !item.items && !item.query && (\n            <li key={item.name}>{item.name} (future)</li>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(`/${section.href}`),\n  );\n\n  return (\n    <aside className=\"sidebar\">\n      <div className=\"search\">\n        <div className=\"input-wrap\">\n          <input\n            type=\"search\"\n            value=\"\"\n            onChange={() => {}}\n            placeholder=\"Type to search\"\n          />\n        </div>\n      </div>\n\n      {!!sidebarSection && (\n        <>\n          <h1>{sidebarSection.name}</h1>\n          <Link className=\"home-link\" to=\"\">\n            Home\n          </Link>\n          <SidebarItems items={sidebarSection.items} />\n        </>\n      )}\n      {!sidebarSection && (\n        <ul className=\"menu-list\">\n          {sidebarData.sections.map(section => (\n            <li key={section.id}>\n              <Link to={section.href}>{section.name}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </aside>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport './layout.scss';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nclass Layout extends React.Component {\n  componentDidMount() {\n    window.mermaid_config = { theme: 'default', startOnLoad: true }; // eslint-disable-line camelcase\n    const s = document.createElement('script');\n    s.setAttribute(\n      'src',\n      'https://unpkg.com/mermaid@7.1.0/dist/mermaid.min.js',\n    );\n    document.head.appendChild(s);\n\n    if (window.mermaid) {\n      window.mermaid.init(\n        undefined,\n        document.getElementsByClassName('mermaid'),\n      );\n    }\n  }\n\n  getSitePages(pages) {\n    // removing the index from the list\n    return pages.filter(page => page.node.fields.slug !== '/');\n  }\n\n  render() {\n    const { children, location } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Helmet\n              title={data.site.siteMetadata.title}\n              meta={[\n                {\n                  name: 'description',\n                  content:\n                    'Template for creating design system documentatation',\n                },\n                {\n                  name: 'docsearch:language',\n                  content: 'en',\n                },\n                {\n                  name: 'docsearch:version',\n                  content: '1.0.0',\n                },\n                {\n                  name: 'keywords',\n                  content: 'design system, style guide, documentation',\n                },\n              ]}\n            >\n              <html lang=\"en\" />\n            </Helmet>\n            <Sidebar location={location} />\n            <div className=\"ContentArea docSearch-content\">{children}</div>\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}