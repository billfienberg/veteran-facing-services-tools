{"componentChunkName":"component---src-layouts-module-components-js","path":"/visual-design/components/expandinggroup/","webpackCompilationHash":"94cf3727d6b2402fe150","result":{"data":{"mdx":{"id":"5522ee15-3def-5bf9-85a7-562d26b7b570","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nclass RenderedComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"site-c-reactcomp__rendered\"\n    }, React.createElement(\"button\", {\n      onClick: () => this.setState({\n        open: !this.state.open\n      })\n    }, \"Toggle Expanding Group\"), React.createElement(ExpandingGroup, {\n      open: this.state.open,\n      expandedContentId: \"expandedContentId\"\n    }, React.createElement(\"div\", null, \"visible child\"), React.createElement(\"div\", null, \"hidden child\")));\n  }\n\n}\nconst layoutProps = {\n  RenderedComponent\n};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(\"h3\", {\n      id: \"code\"\n    }, \"Code:\"), React.createElement(\"h4\", {\n      id: \"example-state\"\n    }, \"Example State\"), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {}\n    }, `state = {\n  open: false\n}\n`)), React.createElement(\"h4\", {\n      id: \"code-sample\"\n    }, \"Code Sample\"), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `import ExpandingGroup from '@department-of-veterans-affairs/formation-react/ExpandingGroup'\n\n<button\n  onClick={() => this.setState({\n    open: !this.state.open\n  })}\n>\n  Toggle Expanding Group\n</button>\n\n<ExpandingGroup\n  open={this.state.open}\n  expandedContentId='expandedContentId'\n>\n  <div>visible child</div>\n  <div>hidden child</div>\n</ExpandingGroup>\n`)), React.createElement(\"h3\", {\n      id: \"rendered-component\"\n    }, \"Rendered Component\"), React.createElement(RenderedComponent, null));\n  }\n\n}"},"tableOfContents":{"items":[{"url":"#code","title":"Code:","items":[{"url":"#example-state","title":"Example State"},{"url":"#code-sample","title":"Code Sample"}]},{"url":"#rendered-component","title":"Rendered Component"}]}},"componentMetadata":{"id":"09ec9a0d-872b-5fb6-a50a-9cd0a9a5d0d9","displayName":"ExpandingGroup","docblock":"","doclets":[],"childrenComponentProp":[{"name":"open","docblock":"show second child","required":true,"parentType":{"name":"bool"},"type":{"value":null},"defaultValue":null},{"name":"additionalClass","docblock":"class added to parent element second child component","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"showPlus","docblock":"show a + or - icon indicating second child's visibility","required":false,"parentType":{"name":"bool"},"type":{"value":null},"defaultValue":null},{"name":"expandedContentId","docblock":"id for ReactCSSTransitionGroup","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null}],"composes":null}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"5522ee15-3def-5bf9-85a7-562d26b7b570","source":"component","frontmatter":{"name":"ExpandingGroup","tags":"group, component","title":"ExpandingGroup"},"name":"ExpandingGroup"}}}