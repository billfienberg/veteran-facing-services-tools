{"componentChunkName":"component---src-layouts-module-components-js","path":"/visual-design/components/errorableselect/","webpackCompilationHash":"c6e87a642f23903f13f7","result":{"data":{"mdx":{"id":"3a86a97e-cfb3-5da8-a94e-be896aa12bb8","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nclass RenderedComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: {\n        value: 'Value',\n        dirty: true\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"site-c-reactcomp__rendered\"\n    }, React.createElement(ErrorableSelect, {\n      errorMessage: \"This is the error message\",\n      label: \"select label\",\n      name: \"Attribute name\",\n      options: ['first option', 'second option', 'third option'],\n      required: true,\n      value: this.state.value,\n      includeBlankOption: true,\n      onValueChange: value => this.setState({\n        value\n      }),\n      additionalClass: \"additional-class\",\n      emptyDescription: \"this is empty\"\n    }));\n  }\n\n}\nconst layoutProps = {\n  RenderedComponent\n};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(\"h3\", {\n      id: \"code\"\n    }, \"Code:\"), React.createElement(\"h4\", {\n      id: \"example-state\"\n    }, \"Example State\"), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {}\n    }, `state = {\n  value: {\n    value: 'Value',\n    dirty: true,\n  },\n}\n`)), React.createElement(\"h4\", {\n      id: \"code-sample\"\n    }, \"Code Sample\"), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `import ErrorableSelect from '@department-of-veterans-affairs/formation-react/ErrorableSelect'\n\n<ErrorableSelect\n  errorMessage='This is the error message'\n  label='select label'\n  name='Attribute name'\n  options={['first option', 'second option', 'third option']}\n  required={true}\n  value={this.state.value}\n  includeBlankOption={true}\n  onValueChange={value => this.setState({ value })}\n  additionalClass='additional-class'\n  emptyDescription='this is empty'\n/>\n`)), React.createElement(\"h3\", {\n      id: \"rendered-component\"\n    }, \"Rendered Component\"), React.createElement(RenderedComponent, null));\n  }\n\n}"},"tableOfContents":{"items":[{"url":"#code","title":"Code:","items":[{"url":"#example-state","title":"Example State"},{"url":"#code-sample","title":"Code Sample"}]},{"url":"#rendered-component","title":"Rendered Component"}]}},"componentMetadata":{"id":"c59502f2-5ee7-57ef-8f63-ce5bfa590c04","displayName":"ErrorableSelect","docblock":"A form select with a label that can display error messages.","doclets":[],"childrenComponentProp":[{"name":"errorMessage","docblock":"Error string to display in the component.\nWhen defined, indicates select has a validation error.","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"name","docblock":"Select name attribute.","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"label","docblock":"Select field label.","required":true,"parentType":{"name":"union"},"type":{"value":[{"name":"string"},{"name":"element"}]},"defaultValue":null},{"name":"onKeyDown","docblock":"KeyDown handler","required":false,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"options","docblock":"Array of options to populate select.","required":true,"parentType":{"name":"arrayOf"},"type":{"value":{"name":"union","value":[{"name":"string"},{"name":"shape","value":{"label":{"name":"string","required":false},"value":{"name":"number","required":false}}},{"name":"shape","value":{"label":{"name":"string","required":false},"value":{"name":"string","required":false}}}]}},"defaultValue":null},{"name":"required","docblock":"Render marker indicating field is required.","required":false,"parentType":{"name":"bool"},"type":{"value":null},"defaultValue":null},{"name":"includeBlankOption","docblock":"is there an empty selectable thing","required":false,"parentType":{"name":"bool"},"type":{"value":null},"defaultValue":{"value":"true","computed":false}},{"name":"emptyDescription","docblock":"Description that shows up for the blank option, when includeBlankOption is true","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"value","docblock":"`value` - object containing:\n  - `value`: Value of the select field.\n  - `dirty`: boolean. Whether a field has been touched by the user.","required":true,"parentType":{"name":"shape"},"type":{"value":{"value":{"name":"string","required":false},"dirty":{"name":"bool","required":false}}},"defaultValue":null},{"name":"onValueChange","docblock":"a function with this prototype: (newValue)","required":true,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"additionalClass","docblock":"Additional css class that is added to the select element.","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null}],"composes":null}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"3a86a97e-cfb3-5da8-a94e-be896aa12bb8","source":"component","frontmatter":{"name":"ErrorableSelect","tags":"select, component","title":"ErrorableSelect"},"name":"ErrorableSelect"}}}