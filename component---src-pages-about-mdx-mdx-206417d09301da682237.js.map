{"version":3,"sources":["webpack:///./src/pages/about-mdx.mdx"],"names":["layoutProps","MDXContent","props","layout","DefaultLayout","render","this","components","name","Layout","Object","assign","id","parentName","React","Component","_frontmatter"],"mappings":"qPAKA,IAAMA,EAAc,GACCC,E,oBACnB,WAAYC,GAAO,aACjB,cAAMA,IAAN,MACKC,OAASC,IAFG,E,0GAKnBC,OAAA,WAAS,MAIHC,KAAKJ,MAFPK,EAFK,EAELA,WACGL,E,oIAHE,mBAKP,OAAO,kBAAC,SAAD,CAAQM,KAAK,UAAUC,OAAQH,KAAKH,OAAQH,YAAaU,OAAOC,OAAO,GAAIX,EAAaE,GAAQK,WAAYA,GAEjH,wBAAIK,GAAG,aAAP,aACA,wBAAIA,GAAG,eAAP,gBACA,kBAAC,SAAD,CAAQJ,KAAK,IAAID,WAAYA,GAA7B,gSAIA,kBAAC,SAAD,CAAQC,KAAK,IAAID,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,IAAID,WAAYA,EAAYM,WAAW,IAAIX,MAAO,CACpG,KAAQ,uBAD6B,uBAGzC,wBAAIU,GAAG,YAAP,YACA,kBAAC,SAAD,CAAQJ,KAAK,IAAID,WAAYA,GAA7B,iDACA,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,GAC5B,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAAK,kBAAC,SAAD,CAAQL,KAAK,IAAID,WAAYA,EAAYM,WAAW,KAAKX,MAAO,CACtH,KAAQ,sDAD8C,uDAI5D,wBAAIU,GAAG,0CAAP,0CACA,kBAAC,SAAD,CAAQJ,KAAK,IAAID,WAAYA,GAA7B,yIAEA,wBAAIK,GAAG,qBAAP,qBACA,kBAAC,SAAD,CAAQJ,KAAK,IAAID,WAAYA,GAA7B,8FAEA,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,GAC5B,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAArD,8CACA,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAArD,gEACA,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAArD,qFAEF,kBAAC,SAAD,CAAQL,KAAK,IAAID,WAAYA,GAA7B,oDACA,kBAAC,SAAD,CAAQC,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYM,WAAW,MAAMX,MAAO,CAC3G,UAAa,iBAD0B,+iCAqC3C,kBAAC,SAAD,CAAQM,KAAK,IAAID,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,SAASD,WAAYA,EAAYM,WAAW,KAAI,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,EAAYM,WAAW,UAArD,aACtG,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,GAC5B,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAArD,4EACA,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAArD,iHAGF,kBAAC,SAAD,CAAQL,KAAK,IAAID,WAAYA,GAA7B,QACA,kBAAC,SAAD,CAAQC,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYM,WAAW,MAAMX,MAAO,IAApE,2OAc3C,kBAAC,SAAD,CAAQM,KAAK,IAAID,WAAYA,GAA7B,SACA,kBAAC,SAAD,CAAQC,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYM,WAAW,MAAMX,MAAO,IAApE,2O,GApGTY,IAAMC,WAqHjCC,EAAe","file":"component---src-pages-about-mdx-mdx-206417d09301da682237.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h2 id=\"about-mdx\">About MDX</h2>\n      <h3 id=\"what-is-mdx\">What is MDX?</h3>\n      <MDXTag name=\"p\" components={components}>{`We will be using the .mdx format to create our documents.\nMDX is a format that lets you seamlessly use JSX in your Markdown documents.\nYou can import components, like interactive charts or notifs, and export metadata.\nThis makes writing long-form content with components a blast ðŸš€`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://mdxjs.com/\"\n        }}>{`https://mdxjs.com/`}</MDXTag></MDXTag>\n      <h3 id=\"examples\">Examples</h3>\n      <MDXTag name=\"p\" components={components}>{`Here is a great page of examples of using MDX`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"http://dump.jamesknelson.com/mdxc-playground.html\"\n          }}>{`http://dump.jamesknelson.com/mdxc-playground.html`}</MDXTag></MDXTag>\n      </MDXTag>\n      <h3 id=\"things-you-can-do-with-mdx-and-gotchas\">Things you can do with MDX and gotchas</h3>\n      <MDXTag name=\"p\" components={components}>{`This is documentation of findings for using MDX in our projects. Please feel\nfree to add to this document if you find anything else.`}</MDXTag>\n      <h4 id=\"inline-components\">Inline components</h4>\n      <MDXTag name=\"p\" components={components}>{`You can use components inline inside your MDX files. Below is an example\nof how to do it.`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`You will need to export it for it to work.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can write both Function components and Class components.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`The reason why you need to use this is when you need the parent state to change.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`This example uses state to toggle the drop down.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-jsx\"\n        }}>{`// Class Component\nexport class InlineClassComponent extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      open: false\n    }\n  }\n  render() {\n    return (\n      <div className=\"site-c-reactcomp__rendered\">\n        <div style={{ backgroundColor: '#112e51' }}>\n          <DropDownPanel\n            buttonText='Helpdesk'\n            cssClass='va-dropdown'\n            isOpen={this.state.open}\n            contents='Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce ullamcorper at eros eu suscipit. Ut imperdiet libero et luctus pretium.'\n            clickHandler={() => this.setState({ open: !this.state.open }) }>\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce ullamcorper at eros eu suscipit. Ut imperdiet libero et luctus pretium.'\n          </DropDownPanel>\n        </div>\n      </div>\n    )\n  }\n}\n\n<InlineClassComponent />\n\n// Function Component\nexport const InlinePresentationalComponent = () => (\n  <h1>Hello World</h1>\n)\n\n<InlinePresentationalComponent />\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\"><MDXTag name=\"em\" components={components} parentName=\"strong\">{`Gotchas`}</MDXTag></MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`MDX doesn't like newlines in between methods in a class based component.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Inline components need to begin with an uppercase letter. If it starts with a\nlowercase it will not render.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Bad:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`export class inlineClassComponent extends React.Component {\n  constructor() {\n    super()\n  }\n\n  render() {\n    return (\n      <div className=\"site-c-reactcomp__rendered\">\n        Hello World\n      </div>\n    )\n  }\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Good:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`export class InlineClassComponent extends React.Component {\n  constructor() {\n    super()\n  }\n  render() {\n    return (\n      <div className=\"site-c-reactcomp__rendered\">\n        Hello World\n      </div>\n    )\n  }\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}