{"version":3,"sources":["webpack:///./src/pages/gatsby-configurations.mdx","webpack:///./src/components/sidebar.js","webpack:///./src/layouts/layout.js"],"names":["layoutProps","MDXContent","props","_this","_React$Component","call","this","layout","DefaultLayout","render","_this$props","components","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_4__","name","Layout","Object","assign","parentName","href","className","React","Component","_frontmatter","Sidebar","_ref","pages","siteTitle","allMarkDown","react_default","type","value","onChange","placeholder","map","component","key","node","id","gatsby_browser_entry","to","fields","slug","toLowerCase","frontmatter","title","page","replace","fileName","getLinkName","getSitePages","filter","children","query","data","Fragment","Helmet_default","site","siteMetadata","meta","content","lang","rel","integrity","crossOrigin","sidebar","edges","_1278266300","propTypes","PropTypes","isRequired"],"mappings":"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","file":"component---src-pages-gatsby-configurations-mdx-30c5af063a559af176e5.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/services-tools_test-git-push-jsb/packages/documentation/src/layouts/layout.js\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <MDXTag name=\"h2\" components={components}>{`Gatsby Configurations`}</MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`Why we chose Gatsby`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Gatsby was effectively chosen because it gave us the flexibility to create\ndocumentation for React Components and also regular documentation for developers.\nWe wanted to be able to generate documentation that lived inside of the code and\nalso generate information on propTypes. We also wanted the flexibility of creating\nmarkdown files for our normal documentation. Gatsby's plugin eco-system gave us a\nlot of flexibilities to customize it how we want it.`}</MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`What is Gatsby`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"Gatsby is a blazing fast modern site generator for React.\"`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Gatsby utilizes React, Node, and GraphQL to generate a blazing fast static websites.\nYou can find more information at `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://www.gatsbyjs.org\"\n        }}>{`https://www.gatsbyjs.org`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`Our Custom Configurations`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`There are a few things that we wanted that Gatsby did not have out of the box.\nWe wanted to be able to document all our React components and generate PropType\ndocumentation. We also wanted to be able to transfer over all our markdown documentatation\nfrom `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`vets.gov-team`}</MDXTag>{` repo. Using Gatsby plugin eco-system. Below are the plugins\nand directions on how we inplemented them.`}</MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`Plugins`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`All the plugins we use can be found in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`gatsby-configs.js`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"https://www.gatsbyjs.org/packages/@benjie/gatsby-mdx/?=gatsby-mdx\"\n            }}>{`gatsby-mdx`}</MDXTag></MDXTag>\n          <MDXTag name=\"blockquote\" components={components} parentName=\"li\">\n            <MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`MDX is a new templating format which uses both JSX(React templating) and markdown.\nThis gaves us the best of both worlds. Being able to write markdown to generate\nquick documentation and use React components within that page.`}</MDXTag>\n          </MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"https://www.gatsbyjs.org/packages/gatsby-plugin-sass/?=gatsby-plugin-sass\"\n            }}>{`gatsby-plugin-sass`}</MDXTag></MDXTag>\n          <MDXTag name=\"blockquote\" components={components} parentName=\"li\">\n            <MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`Be able to use Sass/Scss in our project.`}</MDXTag>\n          </MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"https://www.gatsbyjs.org/packages/gatsby-transformer-react-docgen/?=gatsby-transformer-react-docgen\"\n            }}>{`gatsby-transformer-react-docgen`}</MDXTag></MDXTag>\n          <MDXTag name=\"blockquote\" components={components} parentName=\"li\">\n            <MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`Helps extracting information from React components, and generate documentation\nfrom it. This is created by Facebook. This is what is used for\n`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n                \"href\": \"https://github.com/styleguidist/react-styleguidist\"\n              }}>{`react-styleguidist`}</MDXTag>{`.`}</MDXTag>\n          </MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"https://www.gatsbyjs.org/packages/gatsby-source-filesystem/\"\n            }}>{`gatsby-source-filesystem`}</MDXTag></MDXTag>\n          <MDXTag name=\"blockquote\" components={components} parentName=\"li\">\n            <MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`A Gatsby source plugin for sourcing data into your Gatsby application from your local filesystem.`}</MDXTag>\n          </MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n              \"href\": \"https://www.gatsbyjs.org/packages/gatsby-remark-images/\"\n            }}>{`https://www.gatsbyjs.org/packages/gatsby-remark-images/`}</MDXTag></MDXTag>\n          <MDXTag name=\"blockquote\" components={components} parentName=\"li\">\n            <MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`We are using this to add images to our .mdx pages. This allows us to add\nimages to the folder and use it directly into our .mdx pages.`}</MDXTag>\n          </MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <MDXTag name=\"hr\" components={components}></MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`How we setup `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`gatsby-mdx`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Plugin: `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://www.gatsbyjs.org/packages/@benjie/gatsby-mdx\"\n        }}>{`https://www.gatsbyjs.org/packages/@benjie/gatsby-mdx`}</MDXTag>{`\nGuide: `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://gatsby-mdx.netlify.com/guides\"\n        }}>{`https://gatsby-mdx.netlify.com/guides`}</MDXTag></MDXTag>\n      <MDXTag name=\"h4\" components={components}>{`Installation`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-shell\"\n        }}>{`yarn add gatsby-mdx\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`// gatsby-configs.js\n\nmodule.exports = {\n  plugins: [\\`gatsby-mdx\\`]\n};\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Once this is setup, you will be able to use both markdown and jsx on the page.\nMore information can be found on `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://mdxjs.com/\"\n        }}>{`https://mdxjs.com/`}</MDXTag></MDXTag>\n      <MDXTag name=\"h4\" components={components}>{`Adding a Specific layout for your pages`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`To add a specific layout to be used for the default pages. You need to change\nthe plugin to an Object with options like so.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Change this code:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// gatsby-configs.js\n\nmodule.exports = {\n  plugins: [\\`gatsby-mdx\\`]\n};\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`To this code:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// gatsby-configs.js\n\nmodule.exports = {\n  plugins: [\n    {\n      resolve: \\`gatsby-mdx\\`,\n      options: {\n        defaultLayouts: {\n          default: require.resolve(\"./src/layouts/layout.js\"),\n        }\n      }\n    },\n  ]\n};\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"h4\" components={components}>{`Adding Your Own Folders`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`By default gatsby-mdx will only look in the src/pages folder.\nIn this project we needed a special folder for all our components.\nThis folder lives in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`formation-react/src/components`}</MDXTag>{`.\nWe need to add some configurations to be able to do this.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Add the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"strong\">{`gatsby-source-filesystem`}</MDXTag>{` plugin:`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`This plugin can be added multiple times in the plugins object.\nThis plugin is used for sourcing data into your Gatsby application\nfrom your local filesystem. Here we add a name and path to the\nformation-react/src/components folder. This will now be added to our GraphQL\ndatabase so we can use it in our project.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`// gatsby-configs.js\n\nplugins: [\n  {\n    resolve: \\`gatsby-source-filesystem\\`,\n    options: {\n      path: \\`../formation-react/src/components\\`,\n      name: 'components'\n    }\n  },\n]\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Creating Pages from GraphQL data:`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Now that we have this data in GraphQL, we need to tell Gatsby to make some\npages out of them. To do this we need to add some code to the gatsby-node.js\nfile. This is were you create pages or customize things before it get built.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`first we export createPages and then do a query to GraphQL. You can test it\nout at `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"http://localhost:8000/___graphql\"\n        }}>{`http://localhost:8000/___graphql`}</MDXTag>{`. This is an interactive interface\nfor GraphQL. Here we are getting all the mdx pages and then we are checking if the\ndocument has a name property in the frontmatter. If it doesn't we won't create\na page for it.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`// gatsby-node.js\n\nexports.createPages = ({ graphql, actions }) => {\n  const { createPage } = actions;\n  return new Promise((resolve, reject) => {\n    resolve(\n      graphql(\n        \\`\n          {\n            allMdx {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                    name\n                  }\n                  parent {\n                    ... on File {\n                      name\n                      sourceInstanceName\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n          }\n        \\`\n      ).then(result => {\n        if (result.errors) {\n          console.log(result.errors)\n          reject(result.errors)\n        }\n\n        result.data.allMdx.edges.forEach(async ({ node }) => {\n          if (node.frontmatter.name) { <--- checking for frontmatter name property\n            createPage({\n              path: \\`/\\${node.parent.name.toLowerCase()}/\\`,\n              component: path.resolve('./src/layouts/module-components.js'),\n              context: {\n                id: node.id,\n                name: node.frontmatter.name,\n              },\n            })\n          }\n        })\n      })\n    )\n  })\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Sample of Query Results from Above Query:`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Here is a sample of what the output would be for the Query above. You'll notice\nthat we get more then just the MDX files in the project. Not sure why this is\nbut that is what we get back when doing the Query.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`{\n  \"data\": {\n    \"allMdx\": {\n      \"edges\": [\n        {\n          \"node\": {\n            \"id\": \"db665b4f-22a1-5485-8ef9-4f66f0da7e1b\",\n            \"frontmatter\": {\n              \"title\": \"AcceptTermsPrompt\",\n              \"name\": \"AcceptTermsPrompt\"\n            },\n            \"parent\": {\n              \"name\": \"AcceptTermsPrompt\",\n              \"sourceInstanceName\": \"components\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"fdaeaef8-da4f-53d8-a981-0ef2e4a9acf0\",\n            \"frontmatter\": {\n              \"title\": \"AdditionalInfo\",\n              \"name\": \"AdditionalInfo\"\n            },\n            \"parent\": {\n              \"name\": \"AdditionalInfo\",\n              \"sourceInstanceName\": \"components\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"17c10940-f231-560f-a391-e3a3173f1ed2\",\n            \"frontmatter\": {\n              \"title\": \"\",\n              \"name\": null\n            },\n            \"parent\": {},\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"3121c909-74b5-5ccc-9884-bd72709d7885\",\n            \"frontmatter\": {\n              \"title\": \"\",\n              \"name\": null\n            },\n            \"parent\": {},\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"6d019eeb-8db4-56ce-8bd7-bf14e618d096\",\n            \"frontmatter\": {\n              \"title\": \"How to Add Documents and Components\",\n              \"name\": null\n            },\n            \"parent\": {\n              \"name\": \"how-to\",\n              \"sourceInstanceName\": \"pages\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"2503f180-5b43-5470-9665-cff9f512d7cd\",\n            \"frontmatter\": {\n              \"title\": \"This is the index\",\n              \"name\": null\n            },\n            \"parent\": {\n              \"name\": \"index\",\n              \"sourceInstanceName\": \"pages\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"51b7ecd7-76e7-5ceb-ac57-d2a9c92494de\",\n            \"frontmatter\": {\n              \"title\": \"Internal Tools\",\n              \"name\": null\n            },\n            \"parent\": {\n              \"name\": \"internal-tools\",\n              \"sourceInstanceName\": \"pages\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"id\": \"b683ccc8-0ddd-5b23-8b5c-0cc8e2889aa9\",\n            \"frontmatter\": {\n              \"title\": \"Notes on Writing MDX with Gatsby\",\n              \"name\": null\n            },\n            \"parent\": {\n              \"name\": \"new-component\",\n              \"sourceInstanceName\": \"pages\"\n            },\n            \"code\": {\n              \"scope\": \"\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`You will need to create a path for the pages. This is done with the path property`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`createPage({\n  path: \\`/\\${node.parent.name.toLowerCase()}/\\`, <------- Create path here\n  component: path.resolve('./src/layouts/module-components.js'),\n  context: {\n    id: node.id,\n    name: node.frontmatter.name,\n  },\n})\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Set your component page layout`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`createPage({\n  path: \\`/\\${node.parent.name.toLowerCase()}/\\`,\n  component: path.resolve('./src/layouts/module-components.js'), <------- default layout\n  context: {\n    id: node.id,\n    name: node.frontmatter.name,\n  },\n})\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`In our createPage you will see a context property. This will be available on\nyour page for quering with GraphQL.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`createPage({\n  path: \\`/\\${node.parent.name.toLowerCase()}/\\`,\n  context: {\n    id: node.id, <--- available on your page for GraphQL queries\n    name: node.frontmatter.name, <--- available on your page for GraphQL queries\n  },\n})\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Now that we have that setup we need to add the layout for our components pages.\nIf you go to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src/layouts/module-components.js`}</MDXTag>{` you can seee how we setu our pages\nto be able to render MDX. Here is a sample of the JSX.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  <MDXProvider components={{ code: MyCodeComponent }}>\n    <Layout>\n      <div className=\"content\">\n        {children}\n        <h2>{data.componentMetadata.displayName}</h2>\n        <p>{data.componentMetadata.docblock}</p>\n        <MDXRenderer tableOfContents={tableOfContents}>\n          {data.mdx.code.body}\n        </MDXRenderer>\n        <h2 style={{ marginTop: '2rem' }}>Props:</h2>\n        <PropsTable\n          propMetaData={data.componentMetadata.childrenComponentProp}/>\n      </div>\n    </Layout>\n  </MDXProvider>\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`How do we automatically generate our propTypes`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Since one of the big requirements for our component documents is PropType\ndefinitions, we had to make sure we can populate the propTypes dynamically.\nTo do this we are going to a module called\n`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://github.com/reactjs/react-docgen\"\n        }}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`react-docgen`}</MDXTag></MDXTag>{`. This was created by\nFacebook to handle documentation. What it does is parse component files and\ngenerates data from your components into a json file. We will be using the\n`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://www.gatsbyjs.org/packages/gatsby-transformer-react-docgen/?=gatsby-transformer-react-docgen\"\n        }}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`gatsby-transformer-react-docgen`}</MDXTag></MDXTag>{`\nplugin to do this for us in gatsby. This will add the data into GraphQL so we\ncan query it in our pages.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`This is what the query looks like in our layout page. The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`childrenComponentProp`}</MDXTag>{`\nis were we get our propType definitions.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`export const pageQuery = graphql\\`\n  query(\\$id: String!, \\$name: String!) {\n    mdx(id: { eq: \\$id }) {\n      id\n      code {\n        body\n      }\n      tableOfContents\n    }\n    componentMetadata(displayName: { eq: \\$name }) {\n      id\n      displayName\n      docblock\n      doclets\n      childrenComponentProp {\n        name\n        docblock\n        required\n        parentType {\n          name\n        }\n        type {\n          value\n        }\n        defaultValue {\n          value\n          computed\n        }\n      }\n      composes\n    }\n  }\n\\`;\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`Adding Live Code`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Here is an example of how you add live editable code onto your page.\nNote: This has not been fully implemented on our pages yet. This is something\nwe need to explore further if we really wants to have this feature.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`import React, {Component} from \"react\";\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from \"react-live\";\nimport { MDXProvider } from '@mdx-js/tag'\n\nconst MyCodeComponent = ({ children, ...props }) => (\n  <LiveProvider code={children}>\n    <LiveEditor />\n    <LiveError />\n    <LivePreview />\n  </LiveProvider>\n);\n\nexport default class MyPageLayout extends Component {\n  render() {\n    return <MDXProvider components={{code: MyCodeComponent}}>\n      <div>{this.props.children}</div>\n    </MDXProvider>\n  }\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`Image plugin for MDX files`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`We are using a plugin to be able to use images in .mdx pages. This allows us\nto access the images with relative paths.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://gatsby-mdx.netlify.com/guides/using-gatsby-remark-images\"\n        }}>{`https://gatsby-mdx.netlify.com/guides/using-gatsby-remark-images`}</MDXTag></MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    ","import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nconst getLinkName = (page) => {\n  if (page.node.fields.fileName === 'README') {\n    return page.node.fields.slug;\n  }\n\n  return page.node.fields.fileName;\n};\n\nconst Sidebar = ({ pages, siteTitle, components, allMarkDown }) => {\n  return (\n    <aside className=\"sidebar\">\n      <div className=\"search\">\n        <div className=\"input-wrap\">\n          <input type=\"search\" value=\"\" onChange={() => {}} placeholder=\"Type to search\"/>\n        </div>\n      </div>\n\n      <h1>{ siteTitle }</h1>\n\n      <h4>Components</h4>\n      <ul className=\"menu-list\">\n        {components.map((component) => {\n          return (\n            <li key={component.node.id}>\n              <Link to={`/${component.node.fields.slug.toLowerCase()}/`}>{component.node.frontmatter.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <h4>Documents</h4>\n      <ul className=\"menu-list\">\n        {pages.map((page) => {\n          return (\n            <li key={page.node.id}>\n              <Link to={`/${page.node.fields.slug.toLowerCase()}/`}>{page.node.frontmatter.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <h4>External Documents</h4>\n      <ul className=\"menu-list\">\n        {allMarkDown.map((page) => {\n          return (\n            <li key={page.node.id}>\n              <Link to={`/${page.node.fields.slug.toLowerCase().replace(/ /g, '-')}/`}>{getLinkName(page)}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Sidebar from '../components/sidebar';\nimport './layout.scss';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nclass Layout extends React.Component {\n  getSitePages(pages) {\n    // removing the index from the list\n    return pages.filter(page => page.node.fields.slug !== '/');\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n\n            allMarkDown: allMarkdownRemark(filter: {\n              fields: {\n                slug: {\n                  ne: \"undefined\"\n                }\n              }\n            }, , sort: {\n              fields: [\n                fields___fileName\n              ]\n              order: ASC\n            }) {\n              edges {\n                node {\n                  fields {\n                    slug\n                    fileName\n                    path\n                  }\n                }\n              }\n            }\n\n            pages: allMdx(\n              filter: {\n                fields: {\n                  sourceInstanceName: {\n                    eq: \"pages\"\n                  }\n                }\n              }, sort: {\n                fields: [\n                  frontmatter___title\n                ],\n                order: ASC\n              }) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                  }\n                  fields {\n                    slug\n                    sourceInstanceName\n                  }\n                  parent {\n                    ... on File {\n                      name\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n\n            components: allMdx(\n              filter: {\n                fields: {\n                  sourceInstanceName: {\n                    eq: \"components\"\n                  }\n                }\n              }, sort: {\n                fields: [\n                  frontmatter___title\n                ],\n                order: ASC\n              }) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                  }\n                  fields {\n                    slug\n                    sourceInstanceName\n                  }\n                  parent {\n                    ... on File {\n                      name\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>'\n          '<Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              {\n                name: 'description',\n                content:\n                    'Template for creating design system documentatation',\n              },\n              {\n                name: 'keywords',\n                content: 'design system, style guide, documentation',\n              },\n            ]}>\n\n            <html lang=\"en\"/>\n            <link\n              rel=\"stylesheet\"\n              href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\"\n              integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\"\n              crossOrigin=\"anonymous\"/>\n          </Helmet>'\n          '<Sidebar\n            pages={this.getSitePages(data.pages.edges)}\n            components={data.components.edges}\n            siteTitle={data.site.siteMetadata.title}\n            allMarkDown={data.allMarkDown.edges}/>'\n\n            '<div className=\"ContentArea\">{children}</div>'\n          '</>\n        )}/>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}