{"version":3,"sources":["webpack:///./src/pages/getting-started/common-tasks/new-unit-test.mdx"],"names":["layoutProps","MDXContent","props","layout","DefaultLayout","render","this","components","name","Layout","Object","assign","id","parentName","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-getting-started-common-tasks-new-unit-test-mdx-a1561ac599ab23644e45.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"write-a-unit-test\">Write a unit test</h1>\n      <h2 id=\"unit-testing-overview\">Unit testing overview</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`vets-website`}</MDXTag>{` uses`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"https://mochajs.org/\"\n              }}>{`Mocha`}</MDXTag>{` for running unit tests`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"http://chaijs.com/\"\n              }}>{`Chai`}</MDXTag>{` for test assertions`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"https://airbnb.io/enzyme/\"\n              }}>{`Enzyme`}</MDXTag>{` for mounting and inspecting React components`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"https://sinonjs.org/\"\n              }}>{`Sinon`}</MDXTag>{` for stubs and spies`}</MDXTag>\n          </MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Unit tests are `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`collocated with application folder`}</MDXTag>{` in a test directory that matches the application directory structure`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`- ðŸ“‚ src\n  - ðŸ“‚ my-application\n    - ðŸ“‚ components\n      - MyComponent.jsx\n    - ðŸ“‚ tests\n      - ðŸ“‚ components\n        - MyComponent.unit.spec.jsx\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Mocha runs all unit tests under `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`/src`}</MDXTag>{` folder that end with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`.unit.spec.js(x)`}</MDXTag></MDXTag>\n      </MDXTag>\n      <h2 id=\"unit-test-conventions\">Unit test conventions</h2>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`import { expect } from 'chai';\nimport { shallow } from 'enzyme';\nimport MyComponent from '../../components/MyComponent';\n\ndescribe('my-application', () => {\n  describe('MyComponent', () => {\n    it('renders privacy act disclosure when state.show is true', () => {\n        const componentUnderTest = shallow(<MyComponent />);\n        ...\n        expect(someCondition).to.be.true;\n\n        componentUnderTest.unmount();\n    })\n  });\n});\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`describe`}</MDXTag>{` to organize tests by application and feature`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`two levels is adequate depending on the size of the application being tested`}</MDXTag>\n          </MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`it`}</MDXTag>{` to describe the unit test`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`use active voice`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`describe the behavior in terms specific to the unit`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`don't abstract the test description with business logic`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Recommended`}</MDXTag>{`:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n                <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`it('truncates the address property when it is longer than 15 characters')`}</MDXTag></MDXTag>\n                <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`it('renders an error when props.errors contains at least one item')`}</MDXTag></MDXTag>\n              </MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Not recommended`}</MDXTag>{`:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n                <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`it('shortens the address when the user has a long address')`}</MDXTag></MDXTag>\n                <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`it('shows an error when the user is not logged in')`}</MDXTag></MDXTag>\n              </MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`use Enzyme's `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"https://airbnb.io/enzyme/docs/api/shallow.html\"\n              }}>{`shallow`}</MDXTag>{` instead of `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n                \"href\": \"https://airbnb.io/enzyme/docs/api/mount.html\"\n              }}>{`mount`}</MDXTag>{` when possible to test components`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`always `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`unmount`}</MDXTag>{` components at the end of the test`}</MDXTag>\n          </MDXTag></MDXTag>\n      </MDXTag>\n      <h2 id=\"writing-unit-tests-for-vafs-pages\">Writing unit tests for VAFS pages</h2>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`import { DefinitionTester } from 'platform/testing/unit/schemaform-utils';\n\ndescribe('MyForm FormID', () => {\n\nconst {\n    schema,\n    uiSchema,\n    arrayPath,\n  } = formConfig.chapters.myFormChapter.pages.myFormPage;\n\n  it('renders myFormPage form', () => {\n    const form = mount(\n      <DefinitionTester\n        arrayPath={arrayPath}\n        pagePerItemIndex={0}\n        definitions={formConfig.defaultDefinitions}\n        schema={schema}\n        data={initialData}\n        formData={initialData}\n        uiSchema={uiSchema}\n      />,\n    );\n\n    expect(form.find('select').length).to.equal(6); // from/to months, days; country, state\n    expect(form.find('input').length).to.equal(4); // facility name, from/to years, city\n    form.unmount();\n  });\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`organize forms config tests by page`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`use the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`<DefinitionTester />`}</MDXTag>{` to render form configs for testing`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`test at least`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`number of each type of input is rendered (example above)`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`any conditional display logic on the page`}</MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\">{`all field level validation errors`}</MDXTag>\n          </MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`use the other `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`schemaform-utils`}</MDXTag>{` for filling out form data:`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"blockquote\" components={components}>\n        <MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n          <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`fillData()`}</MDXTag>{` - Enzyme helper that fires a change event with a value for an element at the given selector`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"pre\" components={components} parentName=\"blockquote\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`fillData(\n  form, // mounted <DefinitionTester />\n  'select#root_blah' // selector\n  'USA', // value\n);\n`}</MDXTag></MDXTag>\n        <MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n          <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`fillDate()`}</MDXTag>{` - Enzyme helper that fills in a date field with data from the given date string.`}</MDXTag>\n        </MDXTag>\n        <MDXTag name=\"pre\" components={components} parentName=\"blockquote\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`fillDate(\n  form, // mounted <DefinitionTester />\n  'select#root_blah' // selector\n  '1950-1-3', // value\n);\n`}</MDXTag></MDXTag>\n        <MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n          <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`selectCheckbox()`}</MDXTag>{` - Enzyme helper that fires a change event with a value for a checkbox at the given name`}</MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <h2 id=\"other-utilities\">Other utilities</h2>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`These utilities can be found in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"em\">{`platform/testing/unit/helpers.js`}</MDXTag></MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockFetch()`}</MDXTag>{` -  A function to mock the global fetch function and return the value provided in returnVal`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`resetFetch()`}</MDXTag>{` - resets the mocked fetch set with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockFetch()`}</MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockApiRequest()`}</MDXTag>{` - decorated `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockFetch()`}</MDXTag>{` that adds typical API headers to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`returnVal`}</MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockMultipleApiRequests()`}</MDXTag>{` - decorated `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`mockFetch()`}</MDXTag>{` that mocks a fetch call for each response object in an array`}</MDXTag>\n          </MDXTag></MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`mockFetch(\n  new Error('fake error'), // returnVal\n  false, // shouldResolve: false returns rejected promise. default is true\n);\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`This utility can be found in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"em\">{`platform/utilities/storage/localstorage.js`}</MDXTag></MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`getLocalStorage()`}</MDXTag>{` - convenience accessor for local storage and implements a fallback. Useful for stubbing localstorage.`}</MDXTag>\n      </MDXTag>\n      <h2 id=\"legacy-tools\">Legacy tools</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`While ReactTestUtils and SkinDeep are used in many of our tests, it's recommended that updated or new tests always use Enzyme`}</MDXTag>\n      </MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}