{"version":3,"sources":["webpack:///./src/layouts/external-layout.js","webpack:///./src/components/sidebar.js","webpack:///./src/layouts/layout.js"],"names":["ExternalLayout","render","data","this","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_2__","markdownRemark","fields","slug","className","dangerouslySetInnerHTML","__html","html","Component","pageQuery","Sidebar","_ref","pages","siteTitle","components","allMarkDown","react_default","type","value","onChange","placeholder","map","component","key","node","id","gatsby_browser_entry","to","toLowerCase","frontmatter","title","page","replace","fileName","getLinkName","Layout","getSitePages","filter","_this","children","query","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","rel","href","integrity","crossOrigin","sidebar","edges","_1278266300","React","propTypes","PropTypes","isRequired"],"mappings":"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","file":"component---src-layouts-external-layout-js-9c447832feb7551869db.js","sourcesContent":["/* eslint-disable  react/no-danger */\nimport React, { Component } from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from './layout';\n\nexport default class ExternalLayout extends Component {\n  render() {\n    const { data } = this.props;\n\n    return (\n      <Layout>\n        <h2>{data.markdownRemark.fields.slug}</h2>\n\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }}/>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      fields {\n        slug\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nconst getLinkName = (page) => {\n  if (page.node.fields.fileName === 'README') {\n    return page.node.fields.slug;\n  }\n\n  return page.node.fields.fileName;\n};\n\nconst Sidebar = ({ pages, siteTitle, components, allMarkDown }) => {\n  return (\n    <aside className=\"sidebar\">\n      <div className=\"search\">\n        <div className=\"input-wrap\">\n          <input type=\"search\" value=\"\" onChange={() => {}} placeholder=\"Type to search\"/>\n        </div>\n      </div>\n\n      <h1>{ siteTitle }</h1>\n\n      <h4>Components</h4>\n      <ul className=\"menu-list\">\n        {components.map((component) => {\n          return (\n            <li key={component.node.id}>\n              <Link to={`/${component.node.fields.slug.toLowerCase()}/`}>{component.node.frontmatter.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <h4>Documents</h4>\n      <ul className=\"menu-list\">\n        {pages.map((page) => {\n          return (\n            <li key={page.node.id}>\n              <Link to={`/${page.node.fields.slug.toLowerCase()}/`}>{page.node.frontmatter.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <h4>External Documents</h4>\n      <ul className=\"menu-list\">\n        {allMarkDown.map((page) => {\n          return (\n            <li key={page.node.id}>\n              <Link to={`/${page.node.fields.slug.toLowerCase().replace(/ /g, '-')}/`}>{getLinkName(page)}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Sidebar from '../components/sidebar';\nimport './layout.scss';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nclass Layout extends React.Component {\n  getSitePages(pages) {\n    // removing the index from the list\n    return pages.filter(page => page.node.fields.slug !== '/');\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n\n            allMarkDown: allMarkdownRemark(filter: {\n              fields: {\n                slug: {\n                  ne: \"undefined\"\n                }\n              }\n            }, , sort: {\n              fields: [\n                fields___fileName\n              ]\n              order: ASC\n            }) {\n              edges {\n                node {\n                  fields {\n                    slug\n                    fileName\n                    path\n                  }\n                }\n              }\n            }\n\n            pages: allMdx(\n              filter: {\n                fields: {\n                  sourceInstanceName: {\n                    eq: \"pages\"\n                  }\n                }\n              }, sort: {\n                fields: [\n                  frontmatter___title\n                ],\n                order: ASC\n              }) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                  }\n                  fields {\n                    slug\n                    sourceInstanceName\n                  }\n                  parent {\n                    ... on File {\n                      name\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n\n            components: allMdx(\n              filter: {\n                fields: {\n                  sourceInstanceName: {\n                    eq: \"components\"\n                  }\n                }\n              }, sort: {\n                fields: [\n                  frontmatter___title\n                ],\n                order: ASC\n              }) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                  }\n                  fields {\n                    slug\n                    sourceInstanceName\n                  }\n                  parent {\n                    ... on File {\n                      name\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>'\n          '<Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              {\n                name: 'description',\n                content:\n                    'Template for creating design system documentatation',\n              },\n              {\n                name: 'keywords',\n                content: 'design system, style guide, documentation',\n              },\n            ]}>\n\n            <html lang=\"en\"/>\n            <link\n              rel=\"stylesheet\"\n              href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\"\n              integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\"\n              crossOrigin=\"anonymous\"/>\n          </Helmet>'\n          '<Sidebar\n            pages={this.getSitePages(data.pages.edges)}\n            components={data.components.edges}\n            siteTitle={data.site.siteMetadata.title}\n            allMarkDown={data.allMarkDown.edges}/>'\n\n            '<div className=\"ContentArea\">{children}</div>'\n          '</>\n        )}/>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}