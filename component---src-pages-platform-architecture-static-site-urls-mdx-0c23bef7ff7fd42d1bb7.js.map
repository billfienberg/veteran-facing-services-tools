{"version":3,"sources":["webpack:///./src/pages/platform/architecture/static-site/urls.mdx"],"names":["layoutProps","MDXContent","props","layout","DefaultLayout","render","this","components","name","Layout","Object","assign","id","parentName","React","Component","_frontmatter"],"mappings":"+SAKA,IAAMA,EAAc,GACCC,E,qHACnB,WAAYC,GAAO,aACjB,cAAMA,IAAN,MACKC,OAASC,IAFG,E,mBAKnBC,OAAA,WAAS,MAIHC,KAAKJ,MAFPK,EAFK,EAELA,WACGL,E,oIAHE,mBAKP,OAAO,kBAAC,SAAD,CAAQM,KAAK,UAAUC,OAAQH,KAAKH,OAAQH,YAAaU,OAAOC,OAAO,GAAIX,EAAaE,GAAQK,WAAYA,GAEjH,wBAAIK,GAAG,wBAAP,yBACA,kBAAC,SAAD,CAAQJ,KAAK,IAAID,WAAYA,GAA7B,+GACA,wBAAIK,GAAG,0BAAP,0BACA,kBAAC,SAAD,CAAQJ,KAAK,KAAKD,WAAYA,GAC5B,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAArD,wDACA,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAArD,8DAAyH,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,MAA7D,cAAzH,sBAAyO,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAC1R,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAAK,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,MAA7D,gCAA1D,YAAoL,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,MAA7D,yCACpL,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAAK,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,MAA7D,sCAA1D,YAA0L,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,MAA7D,yCAC1L,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAAK,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,MAA7D,4CAA1D,YAAgM,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,MAA7D,wDAGtM,kBAAC,SAAD,CAAQL,KAAK,IAAID,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYM,WAAW,KAAI,kBAAC,SAAD,CAAQL,KAAK,SAASD,WAAYA,EAAYM,WAAW,MAAzD,iGAAlG,iBAAoS,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,KAA7D,4BAApS,4CAAub,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,KAA7D,8BAAvb,gCAAgkB,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,KAA7D,4BAAhkB,iBAAwrB,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,KAA7D,4DAAxrB,WAA00B,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,KAA7D,8BAA10B,uBAA08B,kBAAC,SAAD,CAAQL,KAAK,aAAaD,WAAYA,EAAYM,WAAW,KAA7D,qCAA18B,KACA,kBAAC,SAAD,CAAQL,KAAK,IAAID,WAAYA,GAA7B,wGACA,wBAAIK,GAAG,mBAAP,mBACA,kBAAC,SAAD,CAAQJ,KAAK,IAAID,WAAYA,GAA7B,6CAAuF,kBAAC,SAAD,CAAQC,KAAK,aAAaD,WAAYA,EAAYM,WAAW,KAA7D,kBAAvF,uL,GA3BkCC,IAAMC,WAgCjCC,EAAe","file":"component---src-pages-platform-architecture-static-site-urls-mdx-0c23bef7ff7fd42d1bb7.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"how-are-urls-created\">How Are URLs Created?</h1>\n      <MDXTag name=\"p\" components={components}>{`Understanding how content URLs are generated by Metalsmith helps prevent build errors. Here's how it works.`}</MDXTag>\n      <h2 id=\"pages-in-vagov-content\">Pages in vagov-content</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Document paths are based on the Markdown file paths.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Each Markdown file generates a corresponding directory and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`index.html`}</MDXTag>{` file. For example:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`_education/tools-programs.md`}</MDXTag>{` `}{`→`}{` `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`/education/tools-programs/index.html`}</MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`_education/tools-programs/index.md`}</MDXTag>{` `}{`→`}{` `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`/education/tools-programs/index.html`}</MDXTag></MDXTag>\n            <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`_education/work-learn/non-traditional.md`}</MDXTag>{` `}{`→`}{` `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`_education/work-learn/non-traditional/index.html`}</MDXTag></MDXTag>\n          </MDXTag></MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\"><MDXTag name=\"strong\" components={components} parentName=\"em\">{`Make sure that every collection sub-directory also has a Markdown file that shares its name.`}</MDXTag></MDXTag>{` Take the the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_employment/job-seekers/`}</MDXTag>{` directory as an example. It also has an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_employment/job-seekers.md`}</MDXTag>{` file. Each Markdown file in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_employment/job-seekers/`}</MDXTag>{` compiles to  `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`employment/jobs-seekers/name_of_markdown_file/index.html`}</MDXTag>{`, while `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_employment/job-seekers.md`}</MDXTag>{` itself compiles to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`employment/job-seekers/index.html`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Failing to take the above step means that you could generate breadcrumbs to pages that do not exist.`}</MDXTag>\n      <h2 id=\"pages-in-drupal\">Pages in Drupal</h2>\n      <MDXTag name=\"p\" components={components}>{`In Drupal, URLs are created based off the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`entityUrl.path`}</MDXTag>{` property included on each node. Similar to vagov-content pages, an index.html page is appended to that path, so that urls can reference just the path without an html extension.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}