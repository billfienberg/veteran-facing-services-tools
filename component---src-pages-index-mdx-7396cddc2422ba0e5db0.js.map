{"version":3,"sources":["webpack:///./src/pages/index.mdx","webpack:///./src/components/sidebar.js","webpack:///./src/layouts/layout.js"],"names":["layoutProps","MDXContent","props","_this","_React$Component","call","this","layout","DefaultLayout","render","_this$props","components","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_4__","name","Layout","Object","assign","_components_indexPage__WEBPACK_IMPORTED_MODULE_6__","React","Component","_frontmatter","Sidebar","_ref","pages","siteTitle","allMarkDown","react_default","className","type","value","onChange","placeholder","map","component","key","node","id","gatsby_browser_entry","to","fields","slug","toLowerCase","frontmatter","title","page","replace","fileName","getLinkName","getSitePages","filter","children","query","data","Fragment","Helmet_default","site","siteMetadata","meta","content","lang","rel","href","integrity","crossOrigin","sidebar","edges","_1278266300","propTypes","PropTypes","isRequired"],"mappings":"sQAMMA,EAAc,GACCC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,OAASC,IAFGL,8BAKnBM,OAAA,WAAS,IAAAC,EAIHJ,KAAKJ,MAFPS,EAFKD,EAELC,WACGT,EAHEU,IAAAF,EAAA,gBAKP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,UAAUC,OAAQZ,KAAKC,OAAQP,YAAamB,OAAOC,OAAO,GAAIpB,EAAaE,GAAQS,WAAYA,GAGjHE,EAAAC,EAAAC,cAACM,EAAA,EAAD,WAdkCC,IAAMC,WAmBjCC,EAAe,w6JCsCbC,SA/CC,SAAAC,GAAmD,IAAhDC,EAAgDD,EAAhDC,MAAOC,EAAyCF,EAAzCE,UAAWjB,EAA8Be,EAA9Bf,WAAYkB,EAAkBH,EAAlBG,YAC/C,OACEC,EAAAhB,EAAAC,cAAA,SAAOgB,UAAU,WACfD,EAAAhB,EAAAC,cAAA,OAAKgB,UAAU,UACbD,EAAAhB,EAAAC,cAAA,OAAKgB,UAAU,cACbD,EAAAhB,EAAAC,cAAA,SAAOiB,KAAK,SAASC,MAAM,GAAGC,SAAU,aAAUC,YAAY,qBAIlEL,EAAAhB,EAAAC,cAAA,UAAMa,GAENE,EAAAhB,EAAAC,cAAA,wBACAe,EAAAhB,EAAAC,cAAA,MAAIgB,UAAU,aACXpB,EAAWyB,IAAI,SAACC,GACf,OACEP,EAAAhB,EAAAC,cAAA,MAAIuB,IAAKD,EAAUE,KAAKC,IACtBV,EAAAhB,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,GAAE,IAAML,EAAUE,KAAKI,OAAOC,KAAKC,cAAjC,KAAoDR,EAAUE,KAAKO,YAAYC,WAM/FjB,EAAAhB,EAAAC,cAAA,uBACAe,EAAAhB,EAAAC,cAAA,MAAIgB,UAAU,aACXJ,EAAMS,IAAI,SAACY,GACV,OACElB,EAAAhB,EAAAC,cAAA,MAAIuB,IAAKU,EAAKT,KAAKC,IACjBV,EAAAhB,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,GAAE,IAAMM,EAAKT,KAAKI,OAAOC,KAAKC,cAA5B,KAA+CG,EAAKT,KAAKO,YAAYC,WAMrFjB,EAAAhB,EAAAC,cAAA,gCACAe,EAAAhB,EAAAC,cAAA,MAAIgB,UAAU,aACXF,EAAYO,IAAI,SAACY,GAChB,OACElB,EAAAhB,EAAAC,cAAA,MAAIuB,IAAKU,EAAKT,KAAKC,IACjBV,EAAAhB,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,GAAE,IAAMM,EAAKT,KAAKI,OAAOC,KAAKC,cAAcI,QAAQ,KAAM,KAAxD,KA9CF,SAACD,GACnB,MAAkC,WAA9BA,EAAKT,KAAKI,OAAOO,SACZF,EAAKT,KAAKI,OAAOC,KAGnBI,EAAKT,KAAKI,OAAOO,SAyC8DC,CAAYH,WCzC9F9B,4GACJkC,aAAA,SAAazB,GAEX,OAAOA,EAAM0B,OAAO,SAAAL,GAAI,MAA8B,MAA1BA,EAAKT,KAAKI,OAAOC,UAG/CnC,OAAA,WAAS,IAAAN,EAAAG,KACCgD,EAAahD,KAAKJ,MAAlBoD,SAER,OACExB,EAAAhB,EAAAC,cAAC0B,EAAA,EAAD,CACEc,MAAK,aAsGL9C,OAAQ,SAAA+C,GAAI,OACV1B,EAAAhB,EAAAC,cAAAe,EAAAhB,EAAA2C,SAAA,WACC3B,EAAAhB,EAAAC,cAAC2C,EAAA5C,EAAD,CACCiC,MAAOS,EAAKG,KAAKC,aAAab,MAC9Bc,KAAM,CACJ,CACE5C,KAAM,cACN6C,QACI,uDAEN,CACE7C,KAAM,WACN6C,QAAS,+CAIbhC,EAAAhB,EAAAC,cAAA,QAAMgD,KAAK,OACXjC,EAAAhB,EAAAC,cAAA,QACEiD,IAAI,aACJC,KAAK,0DACLC,UAAU,0EACVC,YAAY,eApBhB,MAsBCrC,EAAAhB,EAAAC,cAACqD,EAAD,CACCzC,MAAOxB,EAAKiD,aAAaI,EAAK7B,MAAM0C,OACpC1D,WAAY6C,EAAK7C,WAAW0D,MAC5BzC,UAAW4B,EAAKG,KAAKC,aAAab,MAClClB,YAAa2B,EAAK3B,YAAYwC,QA1BhC,MA4BGvC,EAAAhB,EAAAC,cAAA,OAAKgB,UAAU,eAAeuB,GA5BjC,QAxGJE,KAAAc,QAVehD,IAAMC,YAqJ3BL,EAAOqD,UAAY,CACjBjB,SAAUkB,IAAUjC,KAAKkC,YAGZvD","file":"component---src-pages-index-mdx-7396cddc2422ba0e5db0.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/layout.js\";\nimport IndexPage from '../components/indexPage';\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n\n      <IndexPage />\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    ","import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nconst getLinkName = (page) => {\n  if (page.node.fields.fileName === 'README') {\n    return page.node.fields.slug;\n  }\n\n  return page.node.fields.fileName;\n};\n\nconst Sidebar = ({ pages, siteTitle, components, allMarkDown }) => {\n  return (\n    <aside className=\"sidebar\">\n      <div className=\"search\">\n        <div className=\"input-wrap\">\n          <input type=\"search\" value=\"\" onChange={() => {}} placeholder=\"Type to search\"/>\n        </div>\n      </div>\n\n      <h1>{ siteTitle }</h1>\n\n      <h4>Components</h4>\n      <ul className=\"menu-list\">\n        {components.map((component) => {\n          return (\n            <li key={component.node.id}>\n              <Link to={`/${component.node.fields.slug.toLowerCase()}/`}>{component.node.frontmatter.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <h4>Documents</h4>\n      <ul className=\"menu-list\">\n        {pages.map((page) => {\n          return (\n            <li key={page.node.id}>\n              <Link to={`/${page.node.fields.slug.toLowerCase()}/`}>{page.node.frontmatter.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <h4>External Documents</h4>\n      <ul className=\"menu-list\">\n        {allMarkDown.map((page) => {\n          return (\n            <li key={page.node.id}>\n              <Link to={`/${page.node.fields.slug.toLowerCase().replace(/ /g, '-')}/`}>{getLinkName(page)}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Sidebar from '../components/sidebar';\nimport './layout.scss';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nclass Layout extends React.Component {\n  getSitePages(pages) {\n    // removing the index from the list\n    return pages.filter(page => page.node.fields.slug !== '/');\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n\n            allMarkDown: allMarkdownRemark(filter: {\n              fields: {\n                slug: {\n                  ne: \"undefined\"\n                }\n              }\n            }, , sort: {\n              fields: [\n                fields___fileName\n              ]\n              order: ASC\n            }) {\n              edges {\n                node {\n                  fields {\n                    slug\n                    fileName\n                    path\n                  }\n                }\n              }\n            }\n\n            pages: allMdx(\n              filter: {\n                fields: {\n                  sourceInstanceName: {\n                    eq: \"pages\"\n                  }\n                }\n              }, sort: {\n                fields: [\n                  frontmatter___title\n                ],\n                order: ASC\n              }) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                  }\n                  fields {\n                    slug\n                    sourceInstanceName\n                  }\n                  parent {\n                    ... on File {\n                      name\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n\n            components: allMdx(\n              filter: {\n                fields: {\n                  sourceInstanceName: {\n                    eq: \"components\"\n                  }\n                }\n              }, sort: {\n                fields: [\n                  frontmatter___title\n                ],\n                order: ASC\n              }) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                  }\n                  fields {\n                    slug\n                    sourceInstanceName\n                  }\n                  parent {\n                    ... on File {\n                      name\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>'\n          '<Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              {\n                name: 'description',\n                content:\n                    'Template for creating design system documentatation',\n              },\n              {\n                name: 'keywords',\n                content: 'design system, style guide, documentation',\n              },\n            ]}>\n\n            <html lang=\"en\"/>\n            <link\n              rel=\"stylesheet\"\n              href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\"\n              integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\"\n              crossOrigin=\"anonymous\"/>\n          </Helmet>'\n          '<Sidebar\n            pages={this.getSitePages(data.pages.edges)}\n            components={data.components.edges}\n            siteTitle={data.site.siteMetadata.title}\n            allMarkDown={data.allMarkDown.edges}/>'\n\n            '<div className=\"ContentArea\">{children}</div>'\n          '</>\n        )}/>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}