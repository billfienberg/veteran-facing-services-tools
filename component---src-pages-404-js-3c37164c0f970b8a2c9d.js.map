{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/sidebar.js","webpack:///./src/layouts/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layouts_layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","Sidebar","_ref","pages","siteTitle","components","allMarkDown","react_default","className","type","value","onChange","placeholder","map","component","key","node","id","gatsby_browser_entry","to","fields","slug","toLowerCase","frontmatter","title","page","replace","fileName","getLinkName","Layout","getSitePages","filter","render","_this","this","children","props","query","data","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","rel","href","integrity","crossOrigin","sidebar","edges","_1278266300","React","Component","propTypes","PropTypes","isRequired"],"mappings":"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","file":"component---src-pages-404-js-3c37164c0f970b8a2c9d.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../layouts/layout';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nconst getLinkName = (page) => {\n  if (page.node.fields.fileName === 'README') {\n    return page.node.fields.slug;\n  }\n\n  return page.node.fields.fileName;\n};\n\nconst Sidebar = ({ pages, siteTitle, components, allMarkDown }) => {\n  return (\n    <aside className=\"sidebar\">\n      <div className=\"search\">\n        <div className=\"input-wrap\">\n          <input type=\"search\" value=\"\" onChange={() => {}} placeholder=\"Type to search\"/>\n        </div>\n      </div>\n\n      <h1>{ siteTitle }</h1>\n\n      <h4>Components</h4>\n      <ul className=\"menu-list\">\n        {components.map((component) => {\n          return (\n            <li key={component.node.id}>\n              <Link to={`/${component.node.fields.slug.toLowerCase()}/`}>{component.node.frontmatter.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <h4>Documents</h4>\n      <ul className=\"menu-list\">\n        {pages.map((page) => {\n          return (\n            <li key={page.node.id}>\n              <Link to={`/${page.node.fields.slug.toLowerCase()}/`}>{page.node.frontmatter.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <h4>External Documents</h4>\n      <ul className=\"menu-list\">\n        {allMarkDown.map((page) => {\n          return (\n            <li key={page.node.id}>\n              <Link to={`/${page.node.fields.slug.toLowerCase().replace(/ /g, '-')}/`}>{getLinkName(page)}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Sidebar from '../components/sidebar';\nimport './layout.scss';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nclass Layout extends React.Component {\n  getSitePages(pages) {\n    // removing the index from the list\n    return pages.filter(page => page.node.fields.slug !== '/');\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n\n            allMarkDown: allMarkdownRemark(filter: {\n              fields: {\n                slug: {\n                  ne: \"undefined\"\n                }\n              }\n            }, , sort: {\n              fields: [\n                fields___fileName\n              ]\n              order: ASC\n            }) {\n              edges {\n                node {\n                  fields {\n                    slug\n                    fileName\n                    path\n                  }\n                }\n              }\n            }\n\n            pages: allMdx(\n              filter: {\n                fields: {\n                  sourceInstanceName: {\n                    eq: \"pages\"\n                  }\n                }\n              }, sort: {\n                fields: [\n                  frontmatter___title\n                ],\n                order: ASC\n              }) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                  }\n                  fields {\n                    slug\n                    sourceInstanceName\n                  }\n                  parent {\n                    ... on File {\n                      name\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n\n            components: allMdx(\n              filter: {\n                fields: {\n                  sourceInstanceName: {\n                    eq: \"components\"\n                  }\n                }\n              }, sort: {\n                fields: [\n                  frontmatter___title\n                ],\n                order: ASC\n              }) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                  }\n                  fields {\n                    slug\n                    sourceInstanceName\n                  }\n                  parent {\n                    ... on File {\n                      name\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>'\n          '<Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              {\n                name: 'description',\n                content:\n                    'Template for creating design system documentatation',\n              },\n              {\n                name: 'keywords',\n                content: 'design system, style guide, documentation',\n              },\n            ]}>\n\n            <html lang=\"en\"/>\n            <link\n              rel=\"stylesheet\"\n              href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\"\n              integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\"\n              crossOrigin=\"anonymous\"/>\n          </Helmet>'\n          '<Sidebar\n            pages={this.getSitePages(data.pages.edges)}\n            components={data.components.edges}\n            siteTitle={data.site.siteMetadata.title}\n            allMarkDown={data.allMarkDown.edges}/>'\n\n            '<div className=\"ContentArea\">{children}</div>'\n          '</>\n        )}/>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}