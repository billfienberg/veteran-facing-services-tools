{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/components/indexPage.js","webpack:///./src/pages/index.mdx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/sidebar.js","webpack:///./src/components/sidebar/SidebarItems.jsx","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/layouts/layout.js"],"names":["detailsQuery","SEO","_ref","description","lang","meta","keywords","title","react_default","a","createElement","gatsby_browser_entry","query","render","data","metaDescription","site","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_1315885718","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","IndexPage","seo","layoutProps","MDXContent","props","_this","_React$Component","call","this","layout","DefaultLayout","_this$props","components","objectWithoutPropertiesLoose_default","dist","Layout","Object","assign","indexPage","React","Component","_frontmatter","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","children","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape","sections","id","href","items","ComponentList","SidebarItems","edges","map","comp","node","path","context","_157057713","className","item","key","to","Sidebar","sidebarSection","sidebarData","find","section","includes","type","value","onChange","placeholder","Fragment","getSitePages","pages","filter","page","fields","slug","_1044757290"],"mappings":"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ACNuE,KAAM,oCAIZ,CACEvE,KAAM,eACNwE,MAAO,CACL,CACExE,KAAM,yBACNuE,KAAM,sCAER,CACEvE,KAAM,kBACNuE,KAAM,sCAER,CACEvE,KAAM,gBACNuE,KAAM,sCAER,CACEvE,KAAM,oBACNuE,KAAM,qCAER,CACEvE,KAAM,mCACNuE,KAAM,wCAER,CACEvE,KAAM,sBACNuE,KAAM,gDAER,CACEvE,KAAM,6BACNuE,KAAM,+CAER,CACEvE,KAAM,qBACNuE,KAAM,iDAER,CACEvE,KAAM,gCACNuE,KAAM,yCAER,CACEvE,KAAM,wCACNuE,KAAM,oDAIZ,CACEvE,KAAM,oBACNwE,MAAO,IAET,CACExE,KAAM,4BACNwE,MAAO,IAET,CACExE,KAAM,uBACNwE,MAAO,MAIb,CACEF,GAAI,eACJtE,KAAM,eACNuE,KAAM,eACNC,MAAO,CACL,CACExE,KAAM,iBACNwE,MAAO,IAET,CACExE,KAAM,4BAER,CACEA,KAAM,2BAER,CACEA,KAAM,iCAER,CACEA,KAAM,6BAER,CACEA,KAAM,cAIZ,CACEsE,GAAI,QACJtE,KAAM,QACNuE,KAAM,QACNC,MAAO,CACL,CACExE,KAAM,eACNuE,KAAM,wBAER,CACEvE,KAAM,WACNwE,MAAO,CACL,CACExE,KAAM,wBACNuE,KAAM,6BAER,CACEvE,KAAM,+BACNuE,KAAM,oCAER,CACEvE,KAAM,2BACNuE,KAAM,gCAER,CACEvE,KAAM,8BACNuE,KAAM,0BAER,CACEvE,KAAM,sBACNuE,KAAM,+BAIZ,CACEvE,KAAM,eACNwE,MAAO,IAET,CACExE,KAAM,eACNwE,MAAO,MAIb,CACEF,GAAI,WACJtE,KAAM,WACNuE,KAAM,WACNC,MAAO,CACL,CACExE,KAAM,YACNwE,MAAO,IAET,CACExE,KAAM,uBACNT,MAAO,iBAET,CACES,KAAM,iBAER,CACEA,KAAM,WACNwE,MAAO,IAET,CACExE,KAAM,iBACNwE,MAAO,IAET,CACExE,KAAM,aACNwE,MAAO,yKClKjB,SAASC,IACP,OACEtF,EAAAC,EAAAC,cAACC,EAAA,EAAD,C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","file":"component---src-pages-index-mdx-9931ccf5a85797ae80ff.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`;\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                name: 'docsearch:language',\n                content: 'en',\n              },\n              {\n                name: 'docsearch:version',\n                content: '1.0.0',\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport SEO from '../components/seo';\n\nconst IndexPage = () => (\n  <div>\n    <SEO title=\"Home\" keywords={['VA.gov', 'documentation', 'developer']} />\n\n    <h1>VA.gov Developer's Documentations</h1>\n    <p>Welcome, This is the site where we will put all our documentation</p>\n  </div>\n);\n\nexport default IndexPage;\n","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/layout.js\";\nimport IndexPage from '../components/indexPage';\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n\n      <IndexPage />\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    ","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  sections: [\n    {\n      id: 'getting-started',\n      name: 'Getting started',\n      href: 'getting-started',\n      items: [\n        {\n          name: 'Environment setup',\n          items: [\n            {\n              name: 'Internal Tools',\n              href: 'getting-started/internal-tools',\n            },\n          ],\n        },\n        {\n          name: 'Common tasks',\n          items: [\n            {\n              name: 'Running VA.gov locally',\n              href: 'getting-started/common-tasks/local'\n            },\n            {\n              name: 'Building VA.gov',\n              href: 'getting-started/common-tasks/build'\n            },\n            {\n              name: 'Running tests',\n              href: 'getting-started/common-tasks/tests'\n            },\n            {\n              name: 'Linting your code',\n              href: 'getting-started/common-tasks/lint'\n            },\n            {\n              name: 'Creating a new React application',\n              href: 'getting-started/common-tasks/new-app'\n            },\n            {\n              name: 'Writing a unit test',\n              href: 'getting-started/common-tasks/write-unit-test'\n            },\n            {\n              name: 'Writing an end-to-end test',\n              href: 'getting-started/common-tasks/write-e2e-test'\n            },\n            {\n              name: 'Updating Formation',\n              href: 'getting-started/common-tasks/update-formation'\n            },\n            {\n              name: 'Adding new pages to this site',\n              href: 'getting-started/common-tasks/doc-page'\n            },\n            {\n              name: 'Adding pages from Github to this site',\n              href: 'getting-started/common-tasks/external-doc-page'\n            },\n          ],\n        },\n        {\n          name: 'Code organization',\n          items: [],\n        },\n        {\n          name: 'Standards and conventions',\n          items: [],\n        },\n        {\n          name: 'Development workflow',\n          items: [],\n        },\n      ],\n    },\n    {\n      id: 'architecture',\n      name: 'Architecture',\n      href: 'architecture',\n      items: [\n        {\n          name: 'Site structure',\n          items: [],\n        },\n        {\n          name: 'How does the build work?',\n        },\n        {\n          name: 'How do unit tests work?',\n        },\n        {\n          name: 'How do end-to-end tests work?',\n        },\n        {\n          name: 'Visual regression testing',\n        },\n        {\n          name: 'Teamsite',\n        },\n      ],\n    },\n    {\n      id: 'forms',\n      name: 'Forms',\n      href: 'forms',\n      items: [\n        {\n          name: 'Introduction',\n          href: 'forms/when-to-use-fs',\n        },\n        {\n          name: 'Tutorial',\n          items: [\n            {\n              name: 'Form Tutorial - Basic',\n              href: 'forms/form-tutorial-basic',\n            },\n            {\n              name: 'Form Tutorial - Intermediate',\n              href: 'forms/form-tutorial-intermediate',\n            },\n            {\n              name: 'Form Tutorial - Advanced',\n              href: 'forms/form-tutorial-advanced',\n            },\n            {\n              name: 'Setting up Save in Progress',\n              href: 'forms/save-in-progress',\n            },\n            {\n              name: 'Forms in Production',\n              href: 'forms/forms-in-production',\n            },\n          ],\n        },\n        {\n          name: 'Architecture',\n          items: [],\n        },\n        {\n          name: 'Common tasks',\n          items: [],\n        },\n      ],\n    },\n    {\n      id: 'platform',\n      name: 'Platform',\n      href: 'platform',\n      items: [\n        {\n          name: 'Formation',\n          items: [],\n        },\n        {\n          name: 'Formation components',\n          query: 'componentList',\n        },\n        {\n          name: 'Feature flags',\n        },\n        {\n          name: 'Identity',\n          items: [],\n        },\n        {\n          name: 'Static content',\n          items: [],\n        },\n        {\n          name: 'Monitoring',\n          items: [],\n        },\n      ],\n    },\n  ],\n};\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nfunction ComponentList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ComponentListQuery {\n          components: allSitePage(\n            filter: { context: { source: { eq: \"component\" } } }\n          ) {\n            edges {\n              node {\n                path\n                context {\n                  source\n                  name\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SidebarItems\n          items={data.components.edges.map(comp => ({\n            href: comp.node.path,\n            name: comp.node.context.name,\n          }))}\n        />\n      )}\n    />\n  );\n}\n\nexport default function SidebarItems({ items }) {\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"menu-list\">\n      {items.map(item => (\n        <li key={item.name}>\n          {!!item.items && (\n            <li key={item.name}>\n              <h4>{item.name}</h4>\n              <SidebarItems items={item.items} />\n            </li>\n          )}\n          {item.query === 'componentList' && (\n            <li key={item.name}>\n              <h4>{item.name}</h4>\n              <ComponentList />\n            </li>\n          )}\n          {!!item.href && (\n            <li key={item.name}>\n              <Link to={item.href}>{item.name}</Link>\n            </li>\n          )}\n          {!item.href && !item.items && !item.query && (\n            <li key={item.href}>\n              <Link to={item.href}>{item.name}</Link>\n            </li>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport SidebarItems from './SidebarItems';\nimport sidebarData from '../../sidebar';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nexport default function Sidebar({ location }) {\n  const sidebarSection = sidebarData.sections.find(section =>\n    location.pathname.includes(`/${section.href}`),\n  );\n\n  return (\n    <aside className=\"sidebar\">\n      <div className=\"search\">\n        <div className=\"input-wrap\">\n          <input\n            type=\"search\"\n            value=\"\"\n            onChange={() => {}}\n            placeholder=\"Type to search\"\n          />\n        </div>\n      </div>\n\n      {!!sidebarSection && (\n        <>\n          <h1>{sidebarSection.name}</h1>\n          <Link className=\"home-link\" to=\"\">\n            Home\n          </Link>\n          <SidebarItems items={sidebarSection.items} />\n        </>\n      )}\n      {!sidebarSection && (\n        <ul className=\"menu-list\">\n          {sidebarData.sections.map(section => (\n            <li key={section.id}>\n              <Link to={section.href}>{section.name}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </aside>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Sidebar from '../components/sidebar/Sidebar';\nimport './layout.scss';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nclass Layout extends React.Component {\n  getSitePages(pages) {\n    // removing the index from the list\n    return pages.filter(page => page.node.fields.slug !== '/');\n  }\n\n  render() {\n    const { children, location } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Helmet\n              title={data.site.siteMetadata.title}\n              meta={[\n                {\n                  name: 'description',\n                  content:\n                    'Template for creating design system documentatation',\n                },\n                {\n                  name: 'docsearch:language',\n                  content: 'en',\n                },\n                {\n                  name: 'docsearch:version',\n                  content: '1.0.0',\n                },\n                {\n                  name: 'keywords',\n                  content: 'design system, style guide, documentation',\n                },\n              ]}\n            >\n              <html lang=\"en\" />\n            </Helmet>\n            <Sidebar location={location} />\n            <div className=\"ContentArea docSearch-content\">{children}</div>\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}