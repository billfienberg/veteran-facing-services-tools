{"version":3,"sources":["webpack:///./src/pages/platform/front-end-standards/documented-decisions/rjsf-fork.mdx"],"names":["layoutProps","MDXContent","props","layout","DefaultLayout","render","this","components","name","Layout","Object","assign","id","parentName","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-platform-front-end-standards-documented-decisions-rjsf-fork-mdx-84195e24237564bd2131.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"moving-to-a-fork-of-rjsf\">Moving to a fork of RJSF</h1>\n      <MDXTag name=\"table\" components={components}>\n        <MDXTag name=\"thead\" components={components} parentName=\"table\">\n          <MDXTag name=\"tr\" components={components} parentName=\"thead\">\n            <MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}></MDXTag>\n            <MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}></MDXTag>\n            <MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}></MDXTag>\n            <MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}></MDXTag>\n          </MDXTag>\n        </MDXTag>\n        <MDXTag name=\"tbody\" components={components} parentName=\"table\">\n          <MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}><MDXTag name=\"strong\" components={components} parentName=\"td\">{`Decision Made:`}</MDXTag></MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`Yes`}</MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}><MDXTag name=\"strong\" components={components} parentName=\"td\">{`Decision Date:`}</MDXTag></MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`03/2018`}</MDXTag>\n          </MDXTag>\n          <MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}><MDXTag name=\"strong\" components={components} parentName=\"td\">{`Revisit Decision:`}</MDXTag></MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`Yes`}</MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}><MDXTag name=\"strong\" components={components} parentName=\"td\">{`Revisit Date:`}</MDXTag></MDXTag>\n            <MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\n              \"align\": null\n            }}>{`July 2018`}</MDXTag>\n          </MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Revisit Criteria:`}</MDXTag>{` As of 3/2018, we're just starting our fork. After using it for a couple months, we should revist and make sure it's still the best path.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Decision Makers:`}</MDXTag>{` @annekainicUSDS @jbalboni`}</MDXTag>\n      <MDXTag name=\"hr\" components={components}></MDXTag>\n      <h2 id=\"tldr\">tl;dr</h2>\n      <MDXTag name=\"p\" components={components}>{`We've diverged from the react-jsonschema-form functionality enough that forking the library is the best way to continue improving our form building process.`}</MDXTag>\n      <h2 id=\"history\">History</h2>\n      <MDXTag name=\"p\" components={components}>{`We've been using a set of components built on top of RJSF for all of our longer forms. This has been working pretty well, but in the process of upgrading RJSF to work with a newer version of React, we've run into several issues. These issues, coupled with the fact that we use very little of the RJSF code currently, suggest that forking is the better option`}</MDXTag>\n      <h2 id=\"breaking-or-suboptimal-changes-in-the-latest-rjsf-version\">Breaking or suboptimal changes in the latest RJSF version</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Switched JSON Schema validators from jsonschema to ajv. The ajv validator is faster and has more detailed error output, but is also much larger. It nearly doubles the size of RJSF. We have not run into any major issues with jsonschema and one of our goals is to reduce the bundle size of our forms.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Moved defaulting logic out of widgets. This means that all of our widgets now get form data that has empty records, which is contrary to how they were written. It makes it harder to determine when a field is actually empty vs. just defaulted.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Maintains internal state for form data. This is not new, but it causes bugs in our application with autofill, because rapid onChange events can cause stale data to overwrite the current form info. This is a design choice, so it's not really a bug to fix in the library.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`There's a bug in how the default logic for arrays with minItems works. This is fixable in the library and we've submitted a PR, but since we can't update to the latest version due to the above issues, we can't pull it in.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Similarly, we need the changes that have been made to support React 16, but those are post some of the above changes.`}</MDXTag>\n      </MDXTag>\n      <h2 id=\"pros\">Pros</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`We have more control over the code for our forms, making it easier to fix bugs`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Forking addresses all of the above issues`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`We can remove widget and field code that we don't use, making it easier for us to maintain. Eventually that may mean getting away from a separate library entirely.`}</MDXTag>\n      </MDXTag>\n      <h2 id=\"cons\">Cons</h2>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`We take on extra maintenance burden, since this is not code we initially developed. This could include things like security issues.`}</MDXTag>\n      </MDXTag>\n      <h2 id=\"example-of-an-alternative-approach\">Example of an alternative approach</h2>\n      <MDXTag name=\"p\" components={components}>{`We could attempt to move to the latest version and push for the above changes in the main repo, but it's not guaranteed that we could be successful, or even that all of our changes make sense for the main library.`}</MDXTag>\n      <h2 id=\"decision\">Decision</h2>\n      <MDXTag name=\"p\" components={components}>{`We're going to fork RJSF.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}