{"version":3,"sources":["webpack:///./src/pages/add-external-pages.mdx","webpack:///./src/components/sidebar.js","webpack:///./src/layouts/layout.js"],"names":["layoutProps","MDXContent","props","_this","_React$Component","call","this","layout","DefaultLayout","render","_this$props","components","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_4__","name","Layout","Object","assign","parentName","className","href","style","display","target","rel","position","maxWidth","marginLeft","marginRight","paddingBottom","bottom","left","backgroundSize","width","height","margin","verticalAlign","top","boxShadow","alt","title","src","srcSet","sizes","metastring","true}","React","Component","_frontmatter","Sidebar","_ref","pages","siteTitle","allMarkDown","react_default","type","value","onChange","placeholder","map","component","key","node","id","gatsby_browser_entry","to","fields","slug","toLowerCase","frontmatter","page","replace","fileName","getLinkName","getSitePages","filter","children","query","data","Fragment","Helmet_default","site","siteMetadata","meta","content","lang","integrity","crossOrigin","sidebar","edges","_1278266300","propTypes","PropTypes","isRequired"],"mappings":"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","file":"component---src-pages-add-external-pages-mdx-38ed0c4d4e2d6930058f.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/rianfowler/work/veteran-facing-services-tools/packages/documentation/src/layouts/layout.js\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <MDXTag name=\"h2\" components={components}>{`Adding External Pages from Github API`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`We are going to be using Github's GraphQL API to consume markdown pages from GitHub.\nThis document will detail the process of adding pages and how it all works.`}</MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`Why?`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`We wanted a way to get pre-existing documents from GitHub without having to\nduplicate it.`}</MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`How to Add External pages`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`I have created helper functions for the GitHub Api located in `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`services/github-api.js`}</MDXTag>{`.\nWe should store all our utility function for the GitHub Api here. That way we have one source of truth. We can add to this file as needed.`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`getPageAndCreatePage`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`getDirectoryAndCreatePages`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`You will need to run these functions in the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`exports.sourceNodes`}</MDXTag>{` lifecycle hook.\nThis can be found in the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`gatsby-node.js`}</MDXTag>{` file.`}</MDXTag>\n      <MDXTag name=\"h5\" components={components}>{`Limitations`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Due to GitHub's rate limit we can only grab whole directories or single files at a time.\nIf we try to get the whole repo it will give us a rate limit error. This is also due to the size of our documentation repo.`}</MDXTag>\n      <MDXTag name=\"h5\" components={components}>{`Data you will need to make the API request`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Owner of the repo`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Repo name`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`File directory you want to add or file fileName`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Example:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`department-of-veterans-affairs/vets.gov-team/Work Practices/Accessing-Staging.md\n|            owner           |     repo    |           file directory           |\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\"><MDXTag name=\"em\" components={components} parentName=\"strong\">{`Note`}</MDXTag></MDXTag>{`: The file directory is not the url but the actual directory.\nHere is an example of what the file directory should look like:`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}><a className=\"gatsby-resp-image-link\" href=\"/veteran-facing-services-tools/static/9351180725b6bc47870739d8a8fd4a71/5c786/github-file-directory.png\" style={{\n          \"display\": \"block\"\n        }} target=\"_blank\" rel=\"noopener\">\n    <span className=\"gatsby-resp-image-wrapper\" style={{\n            \"position\": \"relative\",\n            \"display\": \"block\",\n            \"maxWidth\": \"665px\",\n            \"marginLeft\": \"auto\",\n            \"marginRight\": \"auto\"\n          }}>\n    <span className=\"gatsby-resp-image-background-image\" style={{\n              \"paddingBottom\": \"9.323308270676693%\",\n              \"position\": \"relative\",\n              \"bottom\": \"0px\",\n              \"left\": \"0px\",\n              \"backgroundSize\": \"cover\",\n              \"display\": \"block\"\n            }}></span>\n    <img className=\"gatsby-resp-image-image\" style={{\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0px\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"top\": \"0px\",\n              \"left\": \"0px\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px white\"\n            }} alt=\"github file directory\" title=\"\" src=\"/veteran-facing-services-tools/static/9351180725b6bc47870739d8a8fd4a71/70f47/github-file-directory.png\" srcSet=\"/veteran-facing-services-tools/static/9351180725b6bc47870739d8a8fd4a71/c873d/github-file-directory.png 259w,\n/veteran-facing-services-tools/static/9351180725b6bc47870739d8a8fd4a71/1e305/github-file-directory.png 518w,\n/veteran-facing-services-tools/static/9351180725b6bc47870739d8a8fd4a71/70f47/github-file-directory.png 1035w,\n/veteran-facing-services-tools/static/9351180725b6bc47870739d8a8fd4a71/5c786/github-file-directory.png 1330w\" sizes=\"(max-width: 665px) 100vw, 665px\" />\n  </span>\n  </a></MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Here is how to use the utility functions:`}</MDXTag>{`\nThese functions will do an API request then create a Gatsby nodes so you can create pages within the system.`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"strong\" components={components} parentName=\"p\">{`getPageAndCreatePage`}</MDXTag>{` - This will add only 1 page in Gatsby`}</MDXTag>\n          <MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n              \"className\": \"language-javascript\"\n            }}>{`// gatsby-node.js\n\nconst githubApi = require('./services/github-api');\n\nexports.sourceNodes = async ({\n  actions,\n  getNode,\n  hasNodeChanged,\n}) => {\n  const { createNode } = actions\n\n  await githubApi.getPageAndCreatePage({\n    owner: 'department-of-veterans-affairs',\n    repo: 'vets.gov-team',\n    dir: 'Work Practices/Accessing-Staging.md',\n  }, createNode);\n}\n`}</MDXTag></MDXTag>\n        </MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">\n          <MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"strong\" components={components} parentName=\"p\">{`getDirectoryAndCreatePages`}</MDXTag>{` - This will add all markdown pages in a directory`}</MDXTag>\n          <MDXTag name=\"pre\" components={components} parentName=\"li\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n              \"className\": \"language-javascript\"\n            }}>{`// gatsby-node.js\n\nconst githubApi = require('./services/github-api');\n\nexports.sourceNodes = async ({\n  actions,\n  getNode,\n  hasNodeChanged,\n}) => {\n  const { createNode } = actions\n\n  await githubApi.getDirectoryAndCreatePages({\n    owner: 'department-of-veterans-affairs',\n    repo: 'vets.gov-team',\n    dir: 'Work Practices',\n  }, createNode);\n}\n`}</MDXTag></MDXTag>\n        </MDXTag>\n      </MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`How it Works`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Initially we were trying to use pre-existing Gatsby plugins to do this but\ncouldn't find one that did what we exactly wanted it to do. The ones that came\ncloses to doing what we wanted ended up timing out due to the massive document repo\nwe have. So we ended up writing our own local plugin. Here is a list of steps we\ntook to make this work.`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use Gatsby's `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`sourceNodes`}</MDXTag>{` lifecycle hook to get data.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use GitHub's GraphQL API to query page information from GitHub`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Create a Gatsby Node for the pages`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`gatsby-transformer-remark`}</MDXTag>{` to convert the markdown data into an html document`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Create pages using the createPages lifecycle hook.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"h4\" components={components}>{`Use Gatsby's `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`sourceNodes`}</MDXTag>{` lifecycle hook to get data.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`First thing we have to do to get data from an API request into Gatsby is hook into the\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`sourceNodes`}</MDXTag>{` lifecycle hook. This is were Gatsby allows you to do this.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript{numberLines:\",\n          \"metastring\": \"true}\",\n          \"true}\": true\n        }}>{`  // gatsby-node.js\n\n  exports.sourceNodes = async ({\n    boundActionCreators,\n    getNode,\n    hasNodeChanged,\n  }) => {\n    const { createNode } = boundActionCreators\n\n  }\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"h4\" components={components}>{`Use GitHub's GraphQL API to query page information from GitHub`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Now we have to do a API request using the Github GraphQL API. You can use the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://developer.github.com/v4/explorer/\"\n        }}>{`GitHub's GraphQL Explorer`}</MDXTag>{` to generate your query. You'll have to explore GitHub's GraphQL API to understand more but here is a reference of how to get content data from GitHub.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://platform.github.community/t/query-repo-contents-with-graphql-api/1896\"\n        }}>{`https://platform.github.community/t/query-repo-contents-with-graphql-api/1896`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Here is an example of what it looks like.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`// gatsby-node.js\n\nconst crypto = require('crypto');\nconst GithubGraphQLApi = require('node-github-graphql');\nconst path = require('path');\n\nconst github = new GithubGraphQLApi({\n  token: process.env.GITHUB_API_KEY,\n});\n\nexports.sourceNodes = async ({\n  boundActionCreators,\n  getNode,\n  hasNodeChanged,\n}) => {\n  const { createNode } = boundActionCreators\n\n  const result = await github.query(\\`\n    {\n      repository(owner: \"department-of-veterans-affairs\" , name: \"vets.gov-team\"){\n        id\n        name\n        object (expression: \"master:Work Practices\"){\n          ... on Tree {\n            entries {\n              oid\n              name\n              object {\n                ... on Tree {\n                  entries {\n                    oid\n                    name\n                    object {\n                      ... on Blob {\n                        text\n                      }\n                    }\n                  }\n                }\n                ... on Blob {\n                  text\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  \\`);\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"h4\" components={components}>{`Create a Gatsby Node for the pages`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`After that we have to create a Node so that Gatsby can add it to the GraphQL data system.\nThere are notes in the below code which shows what is required and what is optional.\nYou may add custom properties that will be available in GraphQL.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`// gatsby-node.js\n\nconst crypto = require('crypto');\nconst GithubGraphQLApi = require('node-github-graphql');\nconst path = require('path');\n\nconst github = new GithubGraphQLApi({\n  token: process.env.GITHUB_API_KEY,\n});\n\nexports.sourceNodes = async ({\n  boundActionCreators,\n  getNode,\n  hasNodeChanged,\n}) => {\n  const { createNode } = boundActionCreators\n\n  const result = await github.query(\\`\n    {\n      repository(owner: \"department-of-veterans-affairs\" , name: \"vets.gov-team\"){\n        id\n        name\n        object (expression: \"master:Work Practices\"){\n          ... on Tree {\n            entries {\n              oid\n              name\n              object {\n                ... on Tree {\n                  entries {\n                    oid\n                    name\n                    object {\n                      ... on Blob {\n                        text\n                      }\n                    }\n                  }\n                }\n                ... on Blob {\n                  text\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  \\`);\n\n  result\n    .data\n    .repository\n    .object\n    .entries.filter(item => item.name.endsWith('.md')).forEach(({ name, oid, object }) => {\n      createNode({\n        id: oid, <---- required\n        parent: null, <---- required\n        children: [], <---- required\n        internal: { <---- required\n          type: 'GithubAPI', <---- define type for look up in GraphQL\n          contentDigest: crypto  <---- required\n            .createHash('md5')\n            .update(object.text)\n            .digest('hex'),\n          mediaType: 'text/markdown', <---- required\n          content: object.text, <---- required\n          directory: dir, <---- custom properties\n          name: name.replace('.md', ''), <---- custom properties\n        }\n      });\n    });\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"h4\" components={components}>{`Use gatsby-transformer-remark to convert the markdown data into an html document`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`When we did a `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`createNode`}</MDXTag>{` we set the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`mediaType: 'text/markdown'`}</MDXTag>{`. This will automatically convert the markdown using `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`gatsby-transformer-remark`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`Create pages using the createPages lifecycle hook`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`After everything is set and we have all our pages in GraphQL. We can now create pages using our new data. Here is an example.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`// gatsby-node.js\n\nresult.data.allMarkDown.edges.forEach(async ({ node }) => {\n  createPage({\n    path: \\`/\\${node.fields.slug.toLowerCase().replace(/ /g, '-')}/\\`,\n    component: path.resolve('./src/layouts/external-layout.js'),\n    context: {\n      id: node.id,\n      name: node.fields.slug,\n    },\n  })\n})\n`}</MDXTag></MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    ","import React from 'react';\nimport { Link } from 'gatsby';\n\n/**\n * Sidebar\n *\n * @param {props} props\n */\n\nconst getLinkName = (page) => {\n  if (page.node.fields.fileName === 'README') {\n    return page.node.fields.slug;\n  }\n\n  return page.node.fields.fileName;\n};\n\nconst Sidebar = ({ pages, siteTitle, components, allMarkDown }) => {\n  return (\n    <aside className=\"sidebar\">\n      <div className=\"search\">\n        <div className=\"input-wrap\">\n          <input type=\"search\" value=\"\" onChange={() => {}} placeholder=\"Type to search\"/>\n        </div>\n      </div>\n\n      <h1>{ siteTitle }</h1>\n\n      <h4>Components</h4>\n      <ul className=\"menu-list\">\n        {components.map((component) => {\n          return (\n            <li key={component.node.id}>\n              <Link to={`/${component.node.fields.slug.toLowerCase()}/`}>{component.node.frontmatter.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <h4>Documents</h4>\n      <ul className=\"menu-list\">\n        {pages.map((page) => {\n          return (\n            <li key={page.node.id}>\n              <Link to={`/${page.node.fields.slug.toLowerCase()}/`}>{page.node.frontmatter.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <h4>External Documents</h4>\n      <ul className=\"menu-list\">\n        {allMarkDown.map((page) => {\n          return (\n            <li key={page.node.id}>\n              <Link to={`/${page.node.fields.slug.toLowerCase().replace(/ /g, '-')}/`}>{getLinkName(page)}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Sidebar from '../components/sidebar';\nimport './layout.scss';\n\n/**\n * Layout\n *\n * @class Layout\n * @extends {React.Component}\n */\nclass Layout extends React.Component {\n  getSitePages(pages) {\n    // removing the index from the list\n    return pages.filter(page => page.node.fields.slug !== '/');\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n\n            allMarkDown: allMarkdownRemark(filter: {\n              fields: {\n                slug: {\n                  ne: \"undefined\"\n                }\n              }\n            }, , sort: {\n              fields: [\n                fields___fileName\n              ]\n              order: ASC\n            }) {\n              edges {\n                node {\n                  fields {\n                    slug\n                    fileName\n                    path\n                  }\n                }\n              }\n            }\n\n            pages: allMdx(\n              filter: {\n                fields: {\n                  sourceInstanceName: {\n                    eq: \"pages\"\n                  }\n                }\n              }, sort: {\n                fields: [\n                  frontmatter___title\n                ],\n                order: ASC\n              }) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                  }\n                  fields {\n                    slug\n                    sourceInstanceName\n                  }\n                  parent {\n                    ... on File {\n                      name\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n\n            components: allMdx(\n              filter: {\n                fields: {\n                  sourceInstanceName: {\n                    eq: \"components\"\n                  }\n                }\n              }, sort: {\n                fields: [\n                  frontmatter___title\n                ],\n                order: ASC\n              }) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                  }\n                  fields {\n                    slug\n                    sourceInstanceName\n                  }\n                  parent {\n                    ... on File {\n                      name\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>'\n          '<Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              {\n                name: 'description',\n                content:\n                    'Template for creating design system documentatation',\n              },\n              {\n                name: 'docsearch:language',\n                content: 'en'\n              },\n              {\n                name: 'docsearch:version',\n                content: '1.0.0'\n              },\n              {\n                name: 'keywords',\n                content: 'design system, style guide, documentation',\n              },\n            ]}>\n\n            <html lang=\"en\"/>\n            <link\n              rel=\"stylesheet\"\n              href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\"\n              integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\"\n              crossOrigin=\"anonymous\"/>\n          </Helmet>'\n          '<Sidebar\n            pages={this.getSitePages(data.pages.edges)}\n            components={data.components.edges}\n            siteTitle={data.site.siteMetadata.title}\n            allMarkDown={data.allMarkDown.edges}/>'\n\n            '<div className=\"ContentArea docSearch-content\">{children}</div>'\n          '</>\n        )}/>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}