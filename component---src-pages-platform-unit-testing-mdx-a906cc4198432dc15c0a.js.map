{"version":3,"sources":["webpack:///./src/pages/platform/unit-testing.mdx"],"names":["layoutProps","MDXContent","props","layout","DefaultLayout","render","this","components","name","Layout","Object","assign","id","parentName","className","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-platform-unit-testing-mdx-a906cc4198432dc15c0a.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h2 id=\"how-do-unit-tests-work\">How do unit tests work?</h2>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`File format`}</MDXTag>{`: *.unit.spec.js`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Where`}</MDXTag>{`: Any *.unit.spec.js file located in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/src`}</MDXTag>{` folder. Typically located in a directory close to the code being tested.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`When`}</MDXTag>{`: Locally through npm script commands, Jenkins build (Unit), and After merging to master`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{` How `}</MDXTag>{`: `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"/getting-started/common-tasks/test\"\n        }}>{`/getting-started/common-tasks/test`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Process`}</MDXTag>{`:`}</MDXTag>\n      <div className=\"mermaid\">{`graph TB\n    A[\"Checks environment\"] --> B[\"Babel transpiles unit tests\"];\n    B[\"Babel transpiles unit tests\"] --> C[\"Test files get built in the environment folder\"];\n    C[\"Test files get built in the environment folder\"] --> D[\"CHOMA randomizes test execution order\"];\n    D[\"CHOMA randomizes test execution order\"] -- Unit tests are executed serially --> F[\"mocha-junit-reporter generates XML report file\"];\n    F[\"mocha-junit-reporter generates XML report file\"] -- this file is used by Jenkins to trigger a failure or success --> G[\"Jenkins will display a failure or success\"];`}</div>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Libraries used`}</MDXTag>{`:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://mochajs.org/\"\n          }}>{`mocha.js`}</MDXTag>{`: Test framework.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.chaijs.com/\"\n          }}>{`chai.js`}</MDXTag>{`: BDD / TDD assertion library.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://github.com/domenic/chai-as-promised\"\n          }}>{`chai-as-promised`}</MDXTag>{`: Extends Chai with assertions about promises.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://sinonjs.org/\"\n          }}>{`sinon.js`}</MDXTag>{`: Standalone test spies, stubs and mocks.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://airbnb.io/enzyme/\"\n          }}>{`enzyme`}</MDXTag>{`: Enzyme is a JavaScript Testing utility for React that makes it easier to test your React Components' output. You can also manipulate, traverse, and in some ways simulate runtime given the output.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.npmjs.com/package/enzyme-adapter-react-16\"\n          }}>{`enzyme-adapter-react-16`}</MDXTag>{`: Enzyme React 16 integration.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.npmjs.com/package/react-dom\"\n          }}>{`react-dom`}</MDXTag>{`: React DOM Library needed for testing React Components.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://reactjs.org/docs/test-utils.html\"\n          }}>{`react-dom/test-utils`}</MDXTag>{`: Test utilities for React DOM.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.npmjs.com/package/react-test-renderer\"\n          }}>{`react-test-renderer`}</MDXTag>{`: This package provides an experimental React renderer that can be used to render React components to pure JavaScript objects, without depending on the DOM or a native mobile environment.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://airbnb.io/enzyme/docs/guides/jsdom.html\"\n          }}>{`jsdom`}</MDXTag>{`: A JavaScript implementation of the WHATWG DOM and HTML standards, for use with node.js.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.npmjs.com/package/mocha-junit-reporter\"\n          }}>{`mocha-junit-reporter`}</MDXTag>{`: Produces JUnit-style XML test results. This is used specifically for Jenkins so it can output and track test results in its system.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://github.com/lennym/choma\"\n          }}>{`choma`}</MDXTag>{`: Random execution order for mocha suites.`}</MDXTag>\n      </MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}