(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{184:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return d}),a.d(n,"_frontmatter",function(){return g});a(62);var t=a(91),o=a.n(t),s=a(5),r=a.n(s),c=a(0),m=a.n(c),i=a(11),l=a(190),p={},d=function(e){function n(n){var a;return(a=e.call(this,n)||this).layout=l.a,a}return r()(n,e),n.prototype.render=function(){var e=this.props,n=e.components,a=o()(e,["components"]);return m.a.createElement(i.MDXTag,{name:"wrapper",Layout:this.layout,layoutProps:Object.assign({},p,a),components:n},m.a.createElement(i.MDXTag,{name:"h2",components:n},"Gatsby Configurations"),m.a.createElement(i.MDXTag,{name:"h3",components:n},"Why we chose Gatsby"),m.a.createElement(i.MDXTag,{name:"p",components:n},"Gatsby was effectively chosen because it gave us the flexibility to create\ndocumentation for React Components and also regular documentation for developers.\nWe wanted to be able to generate documentation that lived inside of the code and\nalso generate information on propTypes. We also wanted the flexibility of creating\nmarkdown files for our normal documentation. Gatsby's plugin eco-system gave us a\nlot of flexibilities to customize it how we want it."),m.a.createElement(i.MDXTag,{name:"h3",components:n},"What is Gatsby"),m.a.createElement(i.MDXTag,{name:"p",components:n},m.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},'"Gatsby is a blazing fast modern site generator for React."')),m.a.createElement(i.MDXTag,{name:"p",components:n},"Gatsby utilizes React, Node, and GraphQL to generate a blazing fast static websites.\nYou can find more information at ",m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.gatsbyjs.org"}},"https://www.gatsbyjs.org"),"."),m.a.createElement(i.MDXTag,{name:"h3",components:n},"Our Custom Configurations"),m.a.createElement(i.MDXTag,{name:"p",components:n},"There are a few things that we wanted that Gatsby did not have out of the box.\nWe wanted to be able to document all our React components and generate PropType\ndocumentation. We also wanted to be able to transfer over all our markdown documentatation\nfrom ",m.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"vets.gov-team")," repo. Using Gatsby plugin eco-system. Below are the plugins\nand directions on how we inplemented them."),m.a.createElement(i.MDXTag,{name:"h3",components:n},"Plugins"),m.a.createElement(i.MDXTag,{name:"p",components:n},"All the plugins we use can be found in ",m.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"gatsby-configs.js"),"."),m.a.createElement(i.MDXTag,{name:"ul",components:n},m.a.createElement(i.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"li"},m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.gatsbyjs.org/packages/@benjie/gatsby-mdx/?=gatsby-mdx"}},"gatsby-mdx")),m.a.createElement(i.MDXTag,{name:"blockquote",components:n,parentName:"li"},m.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"blockquote"},"MDX is a new templating format which uses both JSX(React templating) and markdown.\nThis gaves us the best of both worlds. Being able to write markdown to generate\nquick documentation and use React components within that page."))),m.a.createElement(i.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"li"},m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.gatsbyjs.org/packages/gatsby-plugin-sass/?=gatsby-plugin-sass"}},"gatsby-plugin-sass")),m.a.createElement(i.MDXTag,{name:"blockquote",components:n,parentName:"li"},m.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"blockquote"},"Be able to use Sass/Scss in our project."))),m.a.createElement(i.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"li"},m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.gatsbyjs.org/packages/gatsby-transformer-react-docgen/?=gatsby-transformer-react-docgen"}},"gatsby-transformer-react-docgen")),m.a.createElement(i.MDXTag,{name:"blockquote",components:n,parentName:"li"},m.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"blockquote"},"Helps extracting information from React components, and generate documentation\nfrom it. This is created by Facebook. This is what is used for\n",m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/styleguidist/react-styleguidist"}},"react-styleguidist"),"."))),m.a.createElement(i.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"li"},m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.gatsbyjs.org/packages/gatsby-source-filesystem/"}},"gatsby-source-filesystem")),m.a.createElement(i.MDXTag,{name:"blockquote",components:n,parentName:"li"},m.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"blockquote"},"A Gatsby source plugin for sourcing data into your Gatsby application from your local filesystem."))),m.a.createElement(i.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"li"},m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.gatsbyjs.org/packages/gatsby-remark-images/"}},"https://www.gatsbyjs.org/packages/gatsby-remark-images/")),m.a.createElement(i.MDXTag,{name:"blockquote",components:n,parentName:"li"},m.a.createElement(i.MDXTag,{name:"p",components:n,parentName:"blockquote"},"We are using this to add images to our .mdx pages. This allows us to add\nimages to the folder and use it directly into our .mdx pages.")))),m.a.createElement(i.MDXTag,{name:"hr",components:n}),m.a.createElement(i.MDXTag,{name:"h3",components:n},"How we setup ",m.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"gatsby-mdx")),m.a.createElement(i.MDXTag,{name:"p",components:n},"Plugin: ",m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.gatsbyjs.org/packages/@benjie/gatsby-mdx"}},"https://www.gatsbyjs.org/packages/@benjie/gatsby-mdx"),"\nGuide: ",m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://gatsby-mdx.netlify.com/guides"}},"https://gatsby-mdx.netlify.com/guides")),m.a.createElement(i.MDXTag,{name:"h4",components:n},"Installation"),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-shell"}},"yarn add gatsby-mdx\n")),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// gatsby-configs.js\n\nmodule.exports = {\n  plugins: [`gatsby-mdx`]\n};\n")),m.a.createElement(i.MDXTag,{name:"p",components:n},"Once this is setup, you will be able to use both markdown and jsx on the page.\nMore information can be found on ",m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://mdxjs.com/"}},"https://mdxjs.com/")),m.a.createElement(i.MDXTag,{name:"h4",components:n},"Adding a Specific layout for your pages"),m.a.createElement(i.MDXTag,{name:"p",components:n},"To add a specific layout to be used for the default pages. You need to change\nthe plugin to an Object with options like so."),m.a.createElement(i.MDXTag,{name:"p",components:n},"Change this code:"),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"// gatsby-configs.js\n\nmodule.exports = {\n  plugins: [`gatsby-mdx`]\n};\n")),m.a.createElement(i.MDXTag,{name:"p",components:n},"To this code:"),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},'// gatsby-configs.js\n\nmodule.exports = {\n  plugins: [\n    {\n      resolve: `gatsby-mdx`,\n      options: {\n        defaultLayouts: {\n          default: require.resolve("./src/layouts/layout.js"),\n        }\n      }\n    },\n  ]\n};\n')),m.a.createElement(i.MDXTag,{name:"h4",components:n},"Adding Your Own Folders"),m.a.createElement(i.MDXTag,{name:"p",components:n},"By default gatsby-mdx will only look in the src/pages folder.\nIn this project we needed a special folder for all our components.\nThis folder lives in ",m.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"formation-react/src/components"),".\nWe need to add some configurations to be able to do this."),m.a.createElement(i.MDXTag,{name:"p",components:n},m.a.createElement(i.MDXTag,{name:"strong",components:n,parentName:"p"},"Add the ",m.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"strong"},"gatsby-source-filesystem")," plugin:")),m.a.createElement(i.MDXTag,{name:"p",components:n},"This plugin can be added multiple times in the plugins object.\nThis plugin is used for sourcing data into your Gatsby application\nfrom your local filesystem. Here we add a name and path to the\nformation-react/src/components folder. This will now be added to our GraphQL\ndatabase so we can use it in our project."),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// gatsby-configs.js\n\nplugins: [\n  {\n    resolve: `gatsby-source-filesystem`,\n    options: {\n      path: `../formation-react/src/components`,\n      name: 'components'\n    }\n  },\n]\n")),m.a.createElement(i.MDXTag,{name:"p",components:n},m.a.createElement(i.MDXTag,{name:"strong",components:n,parentName:"p"},"Creating Pages from GraphQL data:")),m.a.createElement(i.MDXTag,{name:"p",components:n},"Now that we have this data in GraphQL, we need to tell Gatsby to make some\npages out of them. To do this we need to add some code to the gatsby-node.js\nfile. This is were you create pages or customize things before it get built."),m.a.createElement(i.MDXTag,{name:"p",components:n},"first we export createPages and then do a query to GraphQL. You can test it\nout at ",m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"http://localhost:8000/___graphql"}},"http://localhost:8000/___graphql"),". This is an interactive interface\nfor GraphQL. Here we are getting all the mdx pages and then we are checking if the\ndocument has a name property in the frontmatter. If it doesn't we won't create\na page for it."),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// gatsby-node.js\n\nexports.createPages = ({ graphql, actions }) => {\n  const { createPage } = actions;\n  return new Promise((resolve, reject) => {\n    resolve(\n      graphql(\n        `\n          {\n            allMdx {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    title\n                    name\n                  }\n                  parent {\n                    ... on File {\n                      name\n                      sourceInstanceName\n                    }\n                  }\n                  code {\n                    scope\n                  }\n                }\n              }\n            }\n          }\n        `\n      ).then(result => {\n        if (result.errors) {\n          console.log(result.errors)\n          reject(result.errors)\n        }\n\n        result.data.allMdx.edges.forEach(async ({ node }) => {\n          if (node.frontmatter.name) { <--- checking for frontmatter name property\n            createPage({\n              path: `/${node.parent.name.toLowerCase()}/`,\n              component: path.resolve('./src/layouts/module-components.js'),\n              context: {\n                id: node.id,\n                name: node.frontmatter.name,\n              },\n            })\n          }\n        })\n      })\n    )\n  })\n}\n")),m.a.createElement(i.MDXTag,{name:"p",components:n},m.a.createElement(i.MDXTag,{name:"strong",components:n,parentName:"p"},"Sample of Query Results from Above Query:")),m.a.createElement(i.MDXTag,{name:"p",components:n},"Here is a sample of what the output would be for the Query above. You'll notice\nthat we get more then just the MDX files in the project. Not sure why this is\nbut that is what we get back when doing the Query."),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},'{\n  "data": {\n    "allMdx": {\n      "edges": [\n        {\n          "node": {\n            "id": "db665b4f-22a1-5485-8ef9-4f66f0da7e1b",\n            "frontmatter": {\n              "title": "AcceptTermsPrompt",\n              "name": "AcceptTermsPrompt"\n            },\n            "parent": {\n              "name": "AcceptTermsPrompt",\n              "sourceInstanceName": "components"\n            },\n            "code": {\n              "scope": ""\n            }\n          }\n        },\n        {\n          "node": {\n            "id": "fdaeaef8-da4f-53d8-a981-0ef2e4a9acf0",\n            "frontmatter": {\n              "title": "AdditionalInfo",\n              "name": "AdditionalInfo"\n            },\n            "parent": {\n              "name": "AdditionalInfo",\n              "sourceInstanceName": "components"\n            },\n            "code": {\n              "scope": ""\n            }\n          }\n        },\n        {\n          "node": {\n            "id": "17c10940-f231-560f-a391-e3a3173f1ed2",\n            "frontmatter": {\n              "title": "",\n              "name": null\n            },\n            "parent": {},\n            "code": {\n              "scope": ""\n            }\n          }\n        },\n        {\n          "node": {\n            "id": "3121c909-74b5-5ccc-9884-bd72709d7885",\n            "frontmatter": {\n              "title": "",\n              "name": null\n            },\n            "parent": {},\n            "code": {\n              "scope": ""\n            }\n          }\n        },\n        {\n          "node": {\n            "id": "6d019eeb-8db4-56ce-8bd7-bf14e618d096",\n            "frontmatter": {\n              "title": "How to Add Documents and Components",\n              "name": null\n            },\n            "parent": {\n              "name": "how-to",\n              "sourceInstanceName": "pages"\n            },\n            "code": {\n              "scope": ""\n            }\n          }\n        },\n        {\n          "node": {\n            "id": "2503f180-5b43-5470-9665-cff9f512d7cd",\n            "frontmatter": {\n              "title": "This is the index",\n              "name": null\n            },\n            "parent": {\n              "name": "index",\n              "sourceInstanceName": "pages"\n            },\n            "code": {\n              "scope": ""\n            }\n          }\n        },\n        {\n          "node": {\n            "id": "51b7ecd7-76e7-5ceb-ac57-d2a9c92494de",\n            "frontmatter": {\n              "title": "Internal Tools",\n              "name": null\n            },\n            "parent": {\n              "name": "internal-tools",\n              "sourceInstanceName": "pages"\n            },\n            "code": {\n              "scope": ""\n            }\n          }\n        },\n        {\n          "node": {\n            "id": "b683ccc8-0ddd-5b23-8b5c-0cc8e2889aa9",\n            "frontmatter": {\n              "title": "Notes on Writing MDX with Gatsby",\n              "name": null\n            },\n            "parent": {\n              "name": "new-component",\n              "sourceInstanceName": "pages"\n            },\n            "code": {\n              "scope": ""\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n')),m.a.createElement(i.MDXTag,{name:"p",components:n},"You will need to create a path for the pages. This is done with the path property"),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"createPage({\n  path: `/${node.parent.name.toLowerCase()}/`, <------- Create path here\n  component: path.resolve('./src/layouts/module-components.js'),\n  context: {\n    id: node.id,\n    name: node.frontmatter.name,\n  },\n})\n")),m.a.createElement(i.MDXTag,{name:"p",components:n},"Set your component page layout"),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"createPage({\n  path: `/${node.parent.name.toLowerCase()}/`,\n  component: path.resolve('./src/layouts/module-components.js'), <------- default layout\n  context: {\n    id: node.id,\n    name: node.frontmatter.name,\n  },\n})\n")),m.a.createElement(i.MDXTag,{name:"p",components:n},"In our createPage you will see a context property. This will be available on\nyour page for quering with GraphQL."),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"createPage({\n  path: `/${node.parent.name.toLowerCase()}/`,\n  context: {\n    id: node.id, <--- available on your page for GraphQL queries\n    name: node.frontmatter.name, <--- available on your page for GraphQL queries\n  },\n})\n")),m.a.createElement(i.MDXTag,{name:"p",components:n},"Now that we have that setup we need to add the layout for our components pages.\nIf you go to ",m.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"src/layouts/module-components.js")," you can seee how we setu our pages\nto be able to render MDX. Here is a sample of the JSX."),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"  <MDXProvider components={{ code: MyCodeComponent }}>\n    <Layout>\n      <div className=\"content\">\n        {children}\n        <h2>{data.componentMetadata.displayName}</h2>\n        <p>{data.componentMetadata.docblock}</p>\n        <MDXRenderer tableOfContents={tableOfContents}>\n          {data.mdx.code.body}\n        </MDXRenderer>\n        <h2 style={{ marginTop: '2rem' }}>Props:</h2>\n        <PropsTable\n          propMetaData={data.componentMetadata.childrenComponentProp}/>\n      </div>\n    </Layout>\n  </MDXProvider>\n")),m.a.createElement(i.MDXTag,{name:"h3",components:n},"How do we automatically generate our propTypes"),m.a.createElement(i.MDXTag,{name:"p",components:n},"Since one of the big requirements for our component documents is PropType\ndefinitions, we had to make sure we can populate the propTypes dynamically.\nTo do this we are going to a module called\n",m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/reactjs/react-docgen"}},m.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"react-docgen")),". This was created by\nFacebook to handle documentation. What it does is parse component files and\ngenerates data from your components into a json file. We will be using the\n",m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.gatsbyjs.org/packages/gatsby-transformer-react-docgen/?=gatsby-transformer-react-docgen"}},m.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"gatsby-transformer-react-docgen")),"\nplugin to do this for us in gatsby. This will add the data into GraphQL so we\ncan query it in our pages."),m.a.createElement(i.MDXTag,{name:"p",components:n},"This is what the query looks like in our layout page. The ",m.a.createElement(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"childrenComponentProp"),"\nis were we get our propType definitions."),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"export const pageQuery = graphql`\n  query($id: String!, $name: String!) {\n    mdx(id: { eq: $id }) {\n      id\n      code {\n        body\n      }\n      tableOfContents\n    }\n    componentMetadata(displayName: { eq: $name }) {\n      id\n      displayName\n      docblock\n      doclets\n      childrenComponentProp {\n        name\n        docblock\n        required\n        parentType {\n          name\n        }\n        type {\n          value\n        }\n        defaultValue {\n          value\n          computed\n        }\n      }\n      composes\n    }\n  }\n`;\n")),m.a.createElement(i.MDXTag,{name:"h3",components:n},"Adding Live Code"),m.a.createElement(i.MDXTag,{name:"p",components:n},"Here is an example of how you add live editable code onto your page.\nNote: This has not been fully implemented on our pages yet. This is something\nwe need to explore further if we really wants to have this feature."),m.a.createElement(i.MDXTag,{name:"pre",components:n},m.a.createElement(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},'import React, {Component} from "react";\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from "react-live";\nimport { MDXProvider } from \'@mdx-js/tag\'\n\nconst MyCodeComponent = ({ children, ...props }) => (\n  <LiveProvider code={children}>\n    <LiveEditor />\n    <LiveError />\n    <LivePreview />\n  </LiveProvider>\n);\n\nexport default class MyPageLayout extends Component {\n  render() {\n    return <MDXProvider components={{code: MyCodeComponent}}>\n      <div>{this.props.children}</div>\n    </MDXProvider>\n  }\n}\n')),m.a.createElement(i.MDXTag,{name:"h3",components:n},"Image plugin for MDX files"),m.a.createElement(i.MDXTag,{name:"p",components:n},"We are using a plugin to be able to use images in .mdx pages. This allows us\nto access the images with relative paths."),m.a.createElement(i.MDXTag,{name:"p",components:n},m.a.createElement(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://gatsby-mdx.netlify.com/guides/using-gatsby-remark-images"}},"https://gatsby-mdx.netlify.com/guides/using-gatsby-remark-images")))},n}(m.a.Component),g={}},188:function(e){e.exports={data:{site:{siteMetadata:{title:"VA.gov Developer's Documentations"}},allMarkDown:{edges:[{node:{fields:{slug:"Work Practices/Accessibility and 508/2016-12-21_508_Audit_Report",fileName:"2016-12-21_508_Audit_Report",path:"Work Practices/Accessibility and 508"}}},{node:{fields:{slug:"Work Practices/Accessibility and 508/meeting-notes/2017-06-05-meeting-508-office.md/2017-06-05-meeting-508-office",fileName:"2017-06-05-meeting-508-office",path:"Work Practices/Accessibility and 508/meeting-notes/2017-06-05-meeting-508-office.md"}}},{node:{fields:{slug:"Work Practices/Accessibility and 508/508-testing-plan",fileName:"508-testing-plan",path:"Work Practices/Accessibility and 508"}}},{node:{fields:{slug:"Work Practices/Accessibility and 508/508officeReviewList",fileName:"508officeReviewList",path:"Work Practices/Accessibility and 508"}}},{node:{fields:{slug:"Work Practices/Accessing-Staging",fileName:"Accessing-Staging",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/Accessibility and 508/DEFINITION-severity-rubric",fileName:"DEFINITION-severity-rubric",path:"Work Practices/Accessibility and 508"}}},{node:{fields:{slug:"Work Practices/Github Requests",fileName:"Github Requests",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/How to File Bugs Tasks and Questions",fileName:"How to File Bugs Tasks and Questions",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/Accessibility and 508/Mac_VoiceOver_guide",fileName:"Mac_VoiceOver_guide",path:"Work Practices/Accessibility and 508"}}},{node:{fields:{slug:"Work Practices/Product_Development_Roles",fileName:"Product_Development_Roles",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/Product_Team_Process",fileName:"Product_Team_Process",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/README",fileName:"README",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/Accessibility and 508/README",fileName:"README",path:"Work Practices/Accessibility and 508"}}},{node:{fields:{slug:"Work Practices/Accessibility and 508/RESEARCH-screenreader-fieldset-legend-label",fileName:"RESEARCH-screenreader-fieldset-legend-label",path:"Work Practices/Accessibility and 508"}}},{node:{fields:{slug:"Work Practices/Slack Requests",fileName:"Slack Requests",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/Team Norms",fileName:"Team Norms",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/Using GitHub and Contributing Code",fileName:"Using GitHub and Contributing Code",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/Accessibility and 508/a11y-508-launch-guidelines",fileName:"a11y-508-launch-guidelines",path:"Work Practices/Accessibility and 508"}}},{node:{fields:{slug:"Work Practices/listserv-management",fileName:"listserv-management",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/mailing-lists",fileName:"mailing-lists",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/norms",fileName:"norms",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/org-chart",fileName:"org-chart",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/team descriptions",fileName:"team descriptions",path:"Work Practices"}}},{node:{fields:{slug:"Work Practices/zenhub description",fileName:"zenhub description",path:"Work Practices"}}}]},pages:{edges:[{node:{id:"f26d4a44-aaa8-5bb0-864b-20fcacf4429d",frontmatter:{title:"Gatsby Configurations"},fields:{slug:"/gatsby-configurations/",sourceInstanceName:"pages"},parent:{__typename:"File",name:"gatsby-configurations"},code:{scope:""}}},{node:{id:"afefbe8a-b2f1-5dc4-b4a1-6dd394c0b0d0",frontmatter:{title:"How to Add Documents"},fields:{slug:"/how-to/",sourceInstanceName:"pages"},parent:{__typename:"File",name:"how-to"},code:{scope:""}}},{node:{id:"26d92fc2-10b0-5f30-aed5-db824c3b40b9",frontmatter:{title:"How to Add Pages from GitHub"},fields:{slug:"/add-external-pages/",sourceInstanceName:"pages"},parent:{__typename:"File",name:"add-external-pages"},code:{scope:""}}},{node:{id:"5156f8bf-8258-5b77-961a-bf87e0c28271",frontmatter:{title:"Internal Tools"},fields:{slug:"/internal-tools/",sourceInstanceName:"pages"},parent:{__typename:"File",name:"internal-tools"},code:{scope:""}}},{node:{id:"e0b12eb0-2ddd-50f9-b6f3-766a4ddb2957",frontmatter:{title:"This is the index"},fields:{slug:"/",sourceInstanceName:"pages"},parent:{__typename:"File",name:"index"},code:{scope:""}}}]},components:{edges:[{node:{id:"f1ac5e08-37d3-5bd0-a2d1-893b28c1824f",frontmatter:{title:"AcceptTermsPrompt"},fields:{slug:"/accepttermsprompt/",sourceInstanceName:"components"},parent:{__typename:"File",name:"AcceptTermsPrompt"},code:{scope:""}}},{node:{id:"92c5cc23-97a8-5177-9a4d-56bddbbefce3",frontmatter:{title:"AdditionalInfo"},fields:{slug:"/additionalinfo/",sourceInstanceName:"components"},parent:{__typename:"File",name:"AdditionalInfo"},code:{scope:""}}}]}}}},189:function(e,n,a){},190:function(e,n,a){"use strict";var t=a(5),o=a.n(t),s=a(188),r=a(0),c=a.n(r),m=a(1),i=a.n(m),l=a(63),p=a.n(l),d=a(42),g=(a(43),function(e){var n=e.pages,a=e.siteTitle,t=e.components,o=e.allMarkDown;return c.a.createElement("aside",{className:"sidebar"},c.a.createElement("div",{className:"search"},c.a.createElement("div",{className:"input-wrap"},c.a.createElement("input",{type:"search",value:"",onChange:function(){},placeholder:"Type to search"}))),c.a.createElement("h1",null,a),c.a.createElement("h4",null,"Components"),c.a.createElement("ul",{className:"menu-list"},t.map(function(e){return c.a.createElement("li",{key:e.node.id},c.a.createElement(d.Link,{to:"/"+e.node.fields.slug.toLowerCase()+"/"},e.node.frontmatter.title))})),c.a.createElement("h4",null,"Documents"),c.a.createElement("ul",{className:"menu-list"},n.map(function(e){return c.a.createElement("li",{key:e.node.id},c.a.createElement(d.Link,{to:"/"+e.node.fields.slug.toLowerCase()+"/"},e.node.frontmatter.title))})),c.a.createElement("h4",null,"External Documents"),c.a.createElement("ul",{className:"menu-list"},o.map(function(e){return c.a.createElement("li",{key:e.node.id},c.a.createElement(d.Link,{to:"/"+e.node.fields.slug.toLowerCase().replace(/ /g,"-")+"/"},function(e){return"README"===e.node.fields.fileName?e.node.fields.slug:e.node.fields.fileName}(e)))})))}),u=(a(189),function(e){function n(){return e.apply(this,arguments)||this}o()(n,e);var a=n.prototype;return a.getSitePages=function(e){return e.filter(function(e){return"/"!==e.node.fields.slug})},a.render=function(){var e=this,n=this.props.children;return c.a.createElement(d.StaticQuery,{query:"1278266300",render:function(a){return c.a.createElement(c.a.Fragment,null,"' '",c.a.createElement(p.a,{title:a.site.siteMetadata.title,meta:[{name:"description",content:"Template for creating design system documentatation"},{name:"keywords",content:"design system, style guide, documentation"}]},c.a.createElement("html",{lang:"en"}),c.a.createElement("link",{rel:"stylesheet",href:"https://use.fontawesome.com/releases/v5.7.0/css/all.css",integrity:"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ",crossOrigin:"anonymous"})),"' '",c.a.createElement(g,{pages:e.getSitePages(a.pages.edges),components:a.components.edges,siteTitle:a.site.siteMetadata.title,allMarkDown:a.allMarkDown.edges}),"' '",c.a.createElement("div",{className:"ContentArea"},n),"' '")},data:s})},n}(c.a.Component));u.propTypes={children:i.a.node.isRequired};n.a=u}}]);
//# sourceMappingURL=component---src-pages-gatsby-configurations-mdx-92efd8d029dc64044a87.js.map