{"data":{"mdx":{"id":"27600f68-98e6-5259-a673-76b5f0576269","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(\"h3\", {\n      id: \"code\"\n    }, \"Code:\"), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `import ProgressBar from '@department-of-veterans-affairs/formation-react/ProgressBar'\n\n<div className=\"site-c-reactcomp__rendered\">\n  <ProgressBar\n    percent={35}\n  />\n</div>\n`)), React.createElement(\"h3\", {\n      id: \"rendered-component\"\n    }, \"Rendered Component\"), React.createElement(\"div\", {\n      className: \"site-c-reactcomp__rendered\"\n    }, React.createElement(ProgressBar, {\n      percent: 35\n    })));\n  }\n\n}"},"tableOfContents":{"items":[{"url":"#code","title":"Code:"},{"url":"#rendered-component","title":"Rendered Component"}]}},"componentMetadata":{"id":"68ce29aa-e86b-598a-8b44-f3840da0664b","displayName":"ProgressBar","docblock":"","doclets":[],"childrenComponentProp":[{"name":"percent","docblock":"Percent of progress made","required":true,"parentType":{"name":"number"},"type":{"value":null},"defaultValue":null}],"composes":null}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"27600f68-98e6-5259-a673-76b5f0576269","source":"component","name":"ProgressBar"}}