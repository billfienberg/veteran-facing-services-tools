{"data":{"mdx":{"id":"2f87e123-1e55-535d-a34d-2c7b76b9e712","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nclass RenderedComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: {\n        value: 'option 2',\n        dirty: false\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"site-c-reactcomp__rendered\"\n    }, React.createElement(ErrorableRadioButtons, {\n      onValueChange: value => this.setState({\n        value\n      }),\n      id: \"defaultId\",\n      name: \"defaultName\",\n      errorMessage: \"Radio Button errorMessage\",\n      label: \"Errorable Radio Buttons\",\n      options: ['option 1', 'option 2', {\n        label: 'option 3 label',\n        value: 'expanding option 3',\n        additional: 'expanded option 3'\n      }],\n      value: this.state.value,\n      required: false,\n      toolTipText: \"this triggers a tooltip\"\n    }));\n  }\n\n}\nconst layoutProps = {\n  RenderedComponent\n};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Code:`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Example State`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {}\n    }, `state = {\n  value: {\n    value: 'option 2',\n    dirty: false\n  }\n}\n`)), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Code Sample`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `import ErrorableRadioButtons from '@department-of-veterans-affairs/formation-react/ErrorableRadioButtons'\n\n<ErrorableRadioButtons\n  onValueChange={(value)=> this.setState({ value })}\n  id='defaultId'\n  name='defaultName'\n  errorMessage='Radio Button errorMessage'\n  label='Errorable Radio Buttons'\n  options={[\n    'option 1',\n    'option 2',\n    {\n      label: 'option 3 label',\n      value: 'expanding option 3',\n      additional: 'expanded option 3',\n    },\n  ]}\n  value={this.state.value}\n  required={false}\n  toolTipText= 'this triggers a tooltip'\n/>\n`)), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Rendered Component`), React.createElement(RenderedComponent, null));\n  }\n\n}"},"tableOfContents":{"items":[{"url":"#code","title":"Code:","items":[{"url":"#example-state","title":"Example State"},{"url":"#code-sample","title":"Code Sample"}]},{"url":"#rendered-component","title":"Rendered Component"}]}},"componentMetadata":{"id":"e2433dd5-1124-5fb4-b475-46598b400a91","displayName":"ErrorableRadioButtons","docblock":"A radio button group with a label.\n\nValidation has the following props.\n\n`additionalFieldsetClass` - String for any additional fieldset classes.\n`additionalLegendClass` - String for any additional legend classes.\n`errorMessage' - String Error message for the radio button group\n`label` - String for the group field label.\n`name` - String for the name attribute.\n`tabIndex` - Number for keyboard tab order.\n`options` - Array of options to populate group.\n`required` - is this field required.\n`value` - string. Value of the select field.\n`onValueChange` - a function with this prototype: (newValue)","doclets":[],"childrenComponentProp":[{"name":"additionalFieldsetClass","docblock":"additional fieldset classes","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"additionalLegendClass","docblock":"additional legend classes","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"errorMessage","docblock":"radio button group error message","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"label","docblock":"radio button group field label","required":true,"parentType":{"name":"union"},"type":{"value":[{"name":"string"},{"name":"element"}]},"defaultValue":null},{"name":"name","docblock":"name attribute","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"id","docblock":"","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"tabIndex","docblock":"keyboard tab order for radio button group","required":false,"parentType":{"name":"number"},"type":{"value":null},"defaultValue":null},{"name":"onMouseDown","docblock":"Mouse Down handler","required":false,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"onKeyDown","docblock":"Key Down handler","required":false,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"options","docblock":"array of options to populate group- each item is a string or an object representing an Expanding Group","required":true,"parentType":{"name":"arrayOf"},"type":{"value":{"name":"union","value":[{"name":"string"},{"name":"shape","value":{"label":{"name":"union","value":[{"name":"string"},{"name":"element"}],"required":true},"value":{"name":"union","value":[{"name":"string"},{"name":"bool"}],"required":true},"additional":{"name":"union","value":[{"name":"string"},{"name":"element"}],"required":false}}}]}},"defaultValue":null},{"name":"value","docblock":"value object for selected field\nvalue: string value that matches radio button value\ndirty: indicates if form is dirty; should be true after any user input","required":true,"parentType":{"name":"shape"},"type":{"value":{"value":{"name":"string","description":"value of the select field.","required":false},"dirty":{"name":"bool","required":false}}},"defaultValue":null},{"name":"onValueChange","docblock":"handler for the value change","required":true,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"required","docblock":"toggles required field indicator","required":false,"parentType":{"name":"bool"},"type":{"value":null},"defaultValue":null}],"composes":null}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"2f87e123-1e55-535d-a34d-2c7b76b9e712","source":"component","name":"ErrorableRadioButtons"}}