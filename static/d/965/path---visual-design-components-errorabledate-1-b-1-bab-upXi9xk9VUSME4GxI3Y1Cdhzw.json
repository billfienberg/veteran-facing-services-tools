{"data":{"mdx":{"id":"698b4b96-9e3a-5144-80ce-2ceadc832a6f","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nclass RenderedComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      date: {\n        day: {\n          value: '14',\n          dirty: false\n        },\n        month: {\n          value: '4',\n          dirty: false\n        },\n        year: {\n          value: '1983',\n          dirty: false\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"site-c-reactcomp__rendered\"\n    }, React.createElement(ErrorableDate, {\n      onValueChange: date => this.setState({\n        date\n      }),\n      required: true,\n      label: \"Please tell us a date\",\n      name: \"Errorable Date\",\n      date: this.state.date,\n      requiredMessage: \"Please provide a response\",\n      invalidMessage: \"Please provide a valid date\"\n    }));\n  }\n\n}\nconst layoutProps = {\n  RenderedComponent\n};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(\"h3\", {\n      id: \"code\"\n    }, \"Code:\"), React.createElement(\"h4\", {\n      id: \"date-example\"\n    }, \"Date example\"), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The date prop Object should look this:`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `this.state = {\n  date: {\n    day: {\n      value: '14',\n      dirty: false,\n    },\n    month: {\n      value: '4',\n      dirty: false,\n    },\n    year: {\n      value: '1983',\n      dirty: false,\n    },\n  }\n}\n`)), React.createElement(\"h4\", {\n      id: \"example-code\"\n    }, \"Example Code\"), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `import ErrorableDate from '@department-of-veterans-affairs/formation-react/ErrorableDate'\n\n<ErrorableDate\n  onValueChange={date => this.setState({ date })}\n  required={true}\n  label='Please tell us a date'\n  name='Errorable Date'\n  date={this.state.date}\n  requiredMessage='Please provide a response'\n  invalidMessage='Please provide a valid date'\n/>;\n`)), React.createElement(\"h3\", {\n      id: \"rendered-component\"\n    }, \"Rendered Component\"), React.createElement(RenderedComponent, null));\n  }\n\n}"},"tableOfContents":{"items":[{"url":"#code","title":"Code:","items":[{"url":"#date-example","title":"Date example"},{"url":"#example-code","title":"Example Code"}]},{"url":"#rendered-component","title":"Rendered Component"}]}},"componentMetadata":{"id":"2ec2e619-f4c1-54ce-add1-a0354a405297","displayName":"ErrorableDate","docblock":"A date input field that accepts values for month and year","doclets":[],"childrenComponentProp":[{"name":"required","docblock":"Render marker indicating field is required.","required":false,"parentType":{"name":"bool"},"type":{"value":null},"defaultValue":null},{"name":"validation","docblock":"object or array. Result of custom validation. Should include a valid prop and a message prop","required":false,"parentType":{"name":"shape"},"type":{"value":{"valid":{"name":"bool","required":false},"message":{"name":"string","required":false}}},"defaultValue":null},{"name":"label","docblock":"Label for entire question.","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"name","docblock":"Used to create unique name attributes for each input.","required":true,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":null},{"name":"date","docblock":"Date value. Should have month, day, and year props","required":true,"parentType":{"name":"shape"},"type":{"value":{"day":{"name":"shape","value":{"value":{"name":"string","required":false},"dirty":{"name":"bool","required":false}},"required":false},"month":{"name":"shape","value":{"value":{"name":"string","required":false},"dirty":{"name":"bool","required":false}},"required":false},"year":{"name":"shape","value":{"value":{"name":"string","required":false},"dirty":{"name":"bool","required":false}},"required":false}}},"defaultValue":null},{"name":"onValueChange","docblock":"a function with this prototype: (newValue)","required":true,"parentType":{"name":"func"},"type":{"value":null},"defaultValue":null},{"name":"requiredMessage","docblock":"","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":{"value":"'Please provide a response'","computed":false}},{"name":"invalidMessage","docblock":"","required":false,"parentType":{"name":"string"},"type":{"value":null},"defaultValue":{"value":"'Please provide a valid date'","computed":false}}],"composes":null}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"698b4b96-9e3a-5144-80ce-2ceadc832a6f","source":"component","name":"ErrorableDate"}}