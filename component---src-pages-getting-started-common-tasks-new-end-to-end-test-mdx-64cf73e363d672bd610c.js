(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{406:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return c})),a.d(t,"_frontmatter",(function(){return l}));a(7),a(6),a(4),a(10),a(11);var n=a(1),o=a.n(n),m=a(2),s=a(336);var r={},c=function(e){var t,a;function n(t){var a;return(a=e.call(this,t)||this).layout=s.a,a}return a=e,(t=n).prototype=Object.create(a.prototype),t.prototype.constructor=t,t.__proto__=a,n.prototype.render=function(){var e=this.props,t=e.components,a=function(e,t){if(null==e)return{};var a,n,o={},m=Object.keys(e);for(n=0;n<m.length;n++)a=m[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,["components"]);return o.a.createElement(m.MDXTag,{name:"wrapper",Layout:this.layout,layoutProps:Object.assign({},r,a),components:t},o.a.createElement("h1",{id:"write-an-end-to-end-test"},"Write an end-to-end test"),o.a.createElement(m.MDXTag,{name:"p",components:t},"Front end engineers use end-to-end (e2e) tests in ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"vets-website")," to validate multipage applications with client-side routing. They are primarily used to assert that:"),o.a.createElement(m.MDXTag,{name:"ul",components:t},o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"client applications render their inputs"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"client-side navigation occurs when the required fields are populated")),o.a.createElement("h2",{id:"end-to-end-testing-overview"},"End-to-end testing overview"),o.a.createElement(m.MDXTag,{name:"ul",components:t},o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"vets-website")," uses ",o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://nightwatchjs.org"}},"Nightwatch")," to run the tests and provide the browser client"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"end-to-end tests are ",o.a.createElement(m.MDXTag,{name:"strong",components:t,parentName:"li"},"collocated in application folder")," with the application they test"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"Two node apps run with the end-to-end tests:",o.a.createElement(m.MDXTag,{name:"ul",components:t,parentName:"li"},o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"mockapi.js")," - hosts mock responses (see ",o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"#mocking-api-responses"}},"Mocking API responses"),")"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"test-server.js")," - builds a server that handles client side routes"))),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"vets-website")," must be started before end-to-end tests are run"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"vets-api")," should not be running when end-to-end tests are run")),o.a.createElement("h2",{id:"end-to-end-tests-conventions"},"End-to-end tests conventions"),o.a.createElement(m.MDXTag,{name:"p",components:t},o.a.createElement(m.MDXTag,{name:"strong",components:t,parentName:"p"},"00-main-test-file.e2e.spec.js")),o.a.createElement(m.MDXTag,{name:"pre",components:t},o.a.createElement(m.MDXTag,{name:"code",components:t,parentName:"pre",props:{}},"const E2eHelpers = require('platform/testing/e2e/helpers')\nconst Timeouts = require('platform/testing/e2e/timeouts.js');\nconst MyApplicationHelpers = require('./my-application-helpers.js');\nconst testData = require('./schema/maximal-test.json');\nconst FormsTestHelpers = require('platform/testing/e2e/form-helpers');\n\n// export the test using E2eHelpers.createE2eTest\nmodule.exports = E2eHelpers.createE2eTest(client => {\n  // mock api responses\n  client.mockData({\n  // path to mock\n    path: '/v0/my-application',\n  // verb to mock\n    verb: 'post',\n  // mock response\n    value: {\n      formSubmissionId: '123fake-submission-id-567',\n      timestamp: '2016-05-16',\n    },\n  });\n\n  // use a comment to indicate what page is being tested\n  // Introduction page\n  client\n    .openUrl(`${E2eHelpers.baseUrl}/my-application`)\n    // use Timeouts constants\n    .waitForElementVisible('body', Timeouts.normal)\n    .assert.title('My Application Title | Veterans Affairs')\n    .click('.schemaform-start-button');\n\n  // disable scrolling\n  FormsTestHelpers.overrideFormsScrolling(client);\n\n  // assert navigation is successful\n  E2eHelpers.expectNavigateAwayFrom(client, '/introduction');\n\n  // Personal Information page.\n  client.expect.element('input[name=\"root_veteranFullName_first\"]').to.be\n    .visible;\n  // use functions from the helper file to perform all actions on the page\n  MyApplicationHelpers.completePersonalInformation(client, testData.data);\n  client.axeCheck('.main').click('.form-panel .usa-button-primary');\n  E2eHelpers.expectNavigateAwayFrom(\n    client,\n    '/my-application/personal-information',\n  );\n")),o.a.createElement(m.MDXTag,{name:"p",components:t},o.a.createElement(m.MDXTag,{name:"strong",components:t,parentName:"p"},"my-application-helpers.js")),o.a.createElement(m.MDXTag,{name:"pre",components:t},o.a.createElement(m.MDXTag,{name:"code",components:t,parentName:"pre",props:{}},"const mock = require('platform/testing/e2e/mock-helpers');\nconst Timeouts = require('platform/testing/e2e/timeouts.js');\nconst Auth = require('platform/testing/e2e/auth.js');\nconst moment = require('moment');\n\nfunction completePersonalInformation(client, data) {\n  client\n    .waitForElementVisible(\n      'input[name=\"root_veteranFullName_first\"]',\n      Timeouts.normal,\n    )\n    .fill(\n      'input[name=\"root_veteranFullName_first\"]',\n      data.veteranFullName.first,\n    )\n    .fill('input[name=\"root_veteranFullName_last\"]', data.veteranFullName.last)\n}\n")),o.a.createElement(m.MDXTag,{name:"p",components:t},o.a.createElement(m.MDXTag,{name:"em",components:t,parentName:"p"},"These are recommendations not requirements.")),o.a.createElement(m.MDXTag,{name:"ul",components:t},o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"separate navigation from field input",o.a.createElement(m.MDXTag,{name:"ul",components:t,parentName:"li"},o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"use a ",o.a.createElement(m.MDXTag,{name:"strong",components:t,parentName:"li"},"main test file")," for navigation, assertions, and calls helpers"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"use a ",o.a.createElement(m.MDXTag,{name:"strong",components:t,parentName:"li"},"helper file")," for filling out forms"))),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"create separate, numbered ",o.a.createElement(m.MDXTag,{name:"strong",components:t,parentName:"li"},"main test files")," to organize tests by their focus:",o.a.createElement(m.MDXTag,{name:"ul",components:t,parentName:"li"},o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"strong",components:t,parentName:"li"},"00-all-fields.e2e.spec.js")," - required and optional fields"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"strong",components:t,parentName:"li"},"01-required.e2e.spec.js")," - only required fields"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"strong",components:t,parentName:"li"},"02-accessibility.e2e.spec.js")," - validates accessibility"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"strong",components:t,parentName:"li"},"03-auth.e2e.spec.js")," - validates authentication"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"strong",components:t,parentName:"li"},"04-cross-cutting-feature.e2e.spec.js")," - validates one feature used across several pages (e.g. save in progress)"))),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"export the end-to-end test using `E2eHelpers.createE2eTest()`- see [Helpers](#helpers)"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"group tests by pages and use a comment to indicate what page is being tested"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"mock all api responses before starting the test. See ",o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"#mocking-api-responses"}},"Mocking API responses")),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"use ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"waitForElementVisible")," before interacting with any element on the page"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"use ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"Timeouts")," constants for setting timeouts (",o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"platform/testing/e2e/timeouts.js"),")"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"use helpers for filling data and performing actions on the page"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"perform ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"axeCheck")," on the main body of the application on each page - see ",o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"#custom-nightwatch-commands"}},"Custom Nightwatch commands")),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"assert that each navigation is successful")),o.a.createElement("h2",{id:"mocking-api-responses"},"Mocking API responses"),o.a.createElement(m.MDXTag,{name:"p",components:t},"A mock server runs with the end-to-end tests to allow tests to make production-like calls."),o.a.createElement(m.MDXTag,{name:"ul",components:t},o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/6d97a63bd60d79864661cc757814ca041648d5c9/src/platform/testing/e2e/nightwatch-commands/mockData.js#L12-L14"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"mockData(data, token = nul)")),o.a.createElement(m.MDXTag,{name:"ul",components:t,parentName:"li"},o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"custom Nighwatch command that mocks the data at the endpoint provided"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},"mock server is started as part of the end-to-end testing script")))),o.a.createElement("h2",{id:"custom-nightwatch-commands"},"Custom Nightwatch commands"),o.a.createElement(m.MDXTag,{name:"p",components:t},"Nightwatch supports extending its client api with ",o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://nightwatchjs.org/guide/#writing-custom-commands"}},"custom commands"),". Custom commands are located in ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"src/platform/testing/e2e/nightwatch-commands")),o.a.createElement(m.MDXTag,{name:"p",components:t},o.a.createElement(m.MDXTag,{name:"em",components:t,parentName:"p"},"Command commands are available on the Nightwatch client e.g. ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"em"},"client.axeCheck()"),". Below are some of the commonly used custom Nightwatch commands.")),o.a.createElement(m.MDXTag,{name:"ul",components:t},o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/d721cf0581c6b7d6f26903540dfc27f26a16a7be/src/platform/testing/e2e/nightwatch-commands/axeCheck.js#L4-L7"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"axeCheck(selector)"))," - uses the ",o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/dequelabs/axe-core/blob/master/doc/developer-guide.md"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"axe-core"))," library to run a series of tests to check for accessibility of content and functionality for DOM nodes in the selector"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/d721cf0581c6b7d6f26903540dfc27f26a16a7be/src/platform/testing/e2e/nightwatch-commands/clickIf.js#L4-L7"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"clickIf(selector, predicate, ...predicateArguments)"))," - clicks the input at the selector when the predicate returns true"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/d721cf0581c6b7d6f26903540dfc27f26a16a7be/src/platform/testing/e2e/nightwatch-commands/fill.js#L5-L6"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"fill(selector, value, callback)"))," - clears the current value and sets to the value provided"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/d721cf0581c6b7d6f26903540dfc27f26a16a7be/src/platform/testing/e2e/nightwatch-commands/fillAddress.js#L2-L5"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"fillAddress(baseName, address}"),")")," - fills an address widget with the value provided"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/343d77e2d7509cdcecee4b41c723d01ca0147881/src/platform/testing/e2e/nightwatch-commands/fillCheckbox.js#L4-L7"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"fillCheckbox(selector, predicate, ...predicateParams"),")")," - clicks the checkbox at the selector when the predicate returns true"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/d721cf0581c6b7d6f26903540dfc27f26a16a7be/src/platform/testing/e2e/nightwatch-commands/fillDate.js#L4-L6"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"fillDate(fieldName, dateString}"),")")," - fills a date widget at the fieldName with the dateString provided e.g. 1990-1-28"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/master/src/platform/testing/e2e/nightwatch-commands/openUrl.js"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"openUrl(url, disableForesee = true)"))," - navigates to url and disables user feedback module (this can interfere with end-to-end tests)"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/d721cf0581c6b7d6f26903540dfc27f26a16a7be/src/platform/testing/e2e/nightwatch-commands/selectRadio.js#L2-L6"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"selectRadio(fieldName, value)"))," - selects the provided option on yesNo widget at the field name"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/d721cf0581c6b7d6f26903540dfc27f26a16a7be/src/platform/testing/e2e/nightwatch-commands/selectYesNo.js#L2-L6"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"selectYesNo(fieldName, predicate)"))," - selects the provided options on yesNo widget at the field name when the predicate returns true")),o.a.createElement("h2",{id:"helpers"},"Helpers"),o.a.createElement(m.MDXTag,{name:"p",components:t},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"src/platform/testing/e2e")," contains other useful helpers"),o.a.createElement(m.MDXTag,{name:"ul",components:t},o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/d721cf0581c6b7d6f26903540dfc27f26a16a7be/src/platform/testing/e2e/helpers.js#L78-L81"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"createE2eTest(beginApplication)"))," - disables smooth scrolling and starts and ends test"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/d721cf0581c6b7d6f26903540dfc27f26a16a7be/src/platform/testing/e2e/nightwatch-commands/selectYesNo.js#L2-L6"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"overrideSmoothFormsScrolling(client)")," and ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"overrideFormsScrolling(client)"))," - disables smooth scrolling during end-to-end testing"),o.a.createElement(m.MDXTag,{name:"li",components:t,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:t,parentName:"li",props:{href:"https://github.com/department-of-veterans-affairs/vets-website/blob/d721cf0581c6b7d6f26903540dfc27f26a16a7be/src/platform/testing/e2e/helpers.js#L94"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"expectNavigationAwayFrom(client, urlString)"))," - asserts the current page is not at the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:t,parentName:"li"},"urlString"))))},n}(o.a.Component),l={}}}]);
//# sourceMappingURL=component---src-pages-getting-started-common-tasks-new-end-to-end-test-mdx-64cf73e363d672bd610c.js.map