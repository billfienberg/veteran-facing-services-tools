{"version":3,"sources":["webpack:///./src/pages/platform/architecture/build-deploy-flows.mdx"],"names":["layoutProps","MDXContent","props","layout","DefaultLayout","render","this","components","name","Layout","Object","assign","id","parentName","className","React","Component","_frontmatter"],"mappings":"sPAKA,IAAMA,EAAc,GACCC,E,oBACnB,WAAYC,GAAO,aACjB,cAAMA,IAAN,MACKC,OAASC,IAFG,E,0GAKnBC,OAAA,WAAS,MAIHC,KAAKJ,MAFPK,EAFK,EAELA,WACGL,E,oIAHE,mBAKP,OAAO,kBAAC,SAAD,CAAQM,KAAK,UAAUC,OAAQH,KAAKH,OAAQH,YAAaU,OAAOC,OAAO,GAAIX,EAAaE,GAAQK,WAAYA,GAEjH,wBAAIK,GAAG,kCAAP,kCACA,kBAAC,SAAD,CAAQJ,KAAK,IAAID,WAAYA,GAA7B,oIACA,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,GAC5B,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAAK,kBAAC,SAAD,CAAQL,KAAK,IAAID,WAAYA,EAAYM,WAAW,KAAKX,MAAO,CACtH,KAAQ,6BAD8C,6BAG1D,kBAAC,SAAD,CAAQM,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAAK,kBAAC,SAAD,CAAQL,KAAK,IAAID,WAAYA,EAAYM,WAAW,KAAKX,MAAO,CACtH,KAAQ,mCAD8C,kCAG1D,kBAAC,SAAD,CAAQM,KAAK,KAAKD,WAAYA,EAAYM,WAAW,MAAK,kBAAC,SAAD,CAAQL,KAAK,IAAID,WAAYA,EAAYM,WAAW,KAAKX,MAAO,CACtH,KAAQ,kBAD8C,kBAI5D,wBAAIU,GAAG,2BAAP,4BACA,kBAAC,SAAD,CAAQJ,KAAK,IAAID,WAAYA,GAA7B,2IACA,yBAAKO,UAAU,WAAf,upBAuBA,wBAAIF,GAAG,uBAAP,uBACA,kBAAC,SAAD,CAAQJ,KAAK,IAAID,WAAYA,GAA7B,+LACA,wBAAIK,GAAG,6BAAP,8BACA,yBAAKE,UAAU,WAAf,qYAQA,wBAAIF,GAAG,6BAAP,6BACA,yBAAKE,UAAU,WAAf,yWAQA,wBAAIF,GAAG,gBAAP,gBACA,yBAAKE,UAAU,WAAf,gb,GAxEkCC,IAAMC,WAsFjCC,EAAe","file":"component---src-pages-platform-architecture-build-deploy-flows-mdx-48b94bcfe3d6de7a7dd4.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/home/jenkins/workspace/ran-facing-services-tools_master/packages/documentation/src/layouts/SidebarLayout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <h1 id=\"build-and-deploy-process-flows\">Build and deploy process flows</h1>\n      <MDXTag name=\"p\" components={components}>{`Here you'll find flow diagrames for the different types of build and deploy flows we have for VA.gov. Those different flows are:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"#standard-masterpr-build\"\n          }}>{`Standard master/PR build`}</MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"#content-only-build-and-deploy\"\n          }}>{`Content only build and deploy`}</MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"#daily-deploy\"\n          }}>{`Daily deploy`}</MDXTag></MDXTag>\n      </MDXTag>\n      <h2 id=\"standard-masterpr-build\">Standard master/PR build</h2>\n      <MDXTag name=\"p\" components={components}>{`This is the typical Jenkins build for any vets-website branch. There is some logic that is different between master and other branches:`}</MDXTag>\n      <div className=\"mermaid\">{`graph TD\n1(Build starts)\n1 --> 2[Check for linter failures]\n1 --> 3[Check for security issues]\n1 --> 4[Run unit tests]\n2 --> 5(Build site and applications)\n3 --> 5\n4 --> 5\n5 --> 6[vagovdev build]\n5 --> 7[vagovstaging build]\n5 --> 8[vagovprod build]\n6 --> 9(Integration testing)\n7 --> 9\n8 --> 9\n9 --> 10[Accessibility tests]\n9 --> 11[End to end tests]\n11 --> 12[Create archives for each build and upload to S3]\n10 --> 12\n12 --> 13{On master branch?}\n13 -->|Yes| 14[Cache Drupal content and files to S3]\n14 --> 15[Deploy builds to dev and staging]\n13 -->|No| 16(Done)\n15 -->16`}</div>\n      <h2 id=\"content-only-deploy\">Content only deploy</h2>\n      <MDXTag name=\"p\" components={components}>{`When content is changed in Drupal, sometimes we need to publish it immediately on a va.gov site. There are two separate processes for this, one for staging/dev and another for production.`}</MDXTag>\n      <h3 id=\"stagingdev-content-deploy\">Staging/dev content deploy</h3>\n      <div className=\"mermaid\">{`graph TD\n1(Build started for dev or staging)\n1 --> 2[Fetch build for latest master commit from S3]\n2 --> 3[Build static pages with new content]\n3 --> 4[Skip Webpack build, use assets from most recent build for applications]\n4 --> 5[Create archive for build and upload to S3]\n5 --> 6[Cache Drupal content and files to S3]\n6 --> 7[Deploy build to dev or staging]`}</div>\n      <h3 id=\"production-content-deploy\">Production content deploy</h3>\n      <div className=\"mermaid\">{`graph TD\n1(Build started)\n1 --> 2[Fetch last released prod build from GitHub releases list]\n2 --> 3[Build static pages with new content]\n3 --> 4[Skip Webpack build, use assets last prod release for applications]\n4 --> 5[Create archive for build and upload to S3]\n5 --> 6[Deploy build to prod]\n6 --> 7[Deploy content preview servers]`}</div>\n      <h2 id=\"daily-deploy\">Daily deploy</h2>\n      <div className=\"mermaid\">{`graph TD\n1(Deploy started)\n1 --> 2[Fetch build for latest master commit from S3]\n2 --> 3[Build static pages with new content]\n3 --> 4[Skip Webpack build, use assets from most recent master build for applications]\n4 --> 5[Create archive for build and upload to S3]\n5 --> 6[Create GitHub release]\n6 --> 7[Wait for 60 minutes]\n7 --> 8[Deploy build to prod]\n8 --> 9[Deploy content preview servers]`}</div>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}